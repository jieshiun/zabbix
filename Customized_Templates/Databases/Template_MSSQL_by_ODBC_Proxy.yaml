zabbix_export:
  version: '6.0'
  date: '2022-09-15T00:54:10Z'
  groups:
    -
      uuid: 009d29fc0b014ef68562790e73006936
      name: 'Customized template'
  templates:
    -
      uuid: c614628b92b54af5a8b7a7f8765e2925
      template: 'Template MSSQL by ODBC Proxy'
      name: 'Template MSSQL by ODBC Proxy'
      description: |
        1. Create an MSSQL user for monitoring.
          View Server State and View Any Definition permissions should be granted to the user.
          Grant this user read permissions to the sysjobschedules, sysjobhistory, sysjobs tables.
          For more information, see MSSQL documentation.
        2. Set the user name and password in host macros ({$MSSQL.USER} and {$MSSQL.PASSWORD}).
          Do not forget to install Microsoft ODBC driver on Zabbix server or Zabbix proxy.
          See Microsoft documentation for instructions: https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-ver15.
          Note! Credentials in the odbc.ini do not work for MSSQL.
        3. For named instance set the value of {$MSSQL.INSTANCE} macro as MSSQL$instance name.
        The "Service's TCP port state" item uses {HOST.CONN} and {$MSSQL.PORT} macros to check the availability of the MSSQL instance.
        
        
        You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/
        
        Template tooling version used: 0.41
      groups:
        -
          name: 'Customized template'
      items:
        -
          uuid: f1d686520d3640d3ac7254525f95d6b3
          name: 'MSSQL: Get job status'
          type: ODBC
          key: 'db.odbc.get[get_job_status,"{$MSSQL.DSN}"]'
          delay: 10m
          history: '0'
          trends: '0'
          value_type: TEXT
          params: |
            SELECT sj.name AS JobName
            , sj.enabled AS Enabled
            , sjs.last_run_outcome AS RunStatus
            , sjs.last_outcome_message AS LastRunStatusMessage
            , sjs.last_run_duration/10000*3600 + sjs.last_run_duration/100%100*60 + sjs.last_run_duration%100 AS RunDuration
            , CASE sjs.last_run_date
                WHEN 0 THEN NULL
                ELSE msdb.dbo.agent_datetime(sjs.last_run_date,sjs.last_run_time)
                END AS LastRunDateTime
            , sja.next_scheduled_run_date AS NextRunDateTime
            FROM msdb..sysjobs AS sj
            LEFT JOIN msdb..sysjobservers AS sjs ON sj.job_id = sjs.job_id
            LEFT JOIN ( SELECT job.job_id,
                max(act.session_id) AS s_id,
                max(act.next_scheduled_run_date) AS next_scheduled_run_date
                FROM msdb..sysjobs AS job
                LEFT JOIN msdb..sysjobactivity AS act ON act.job_id = job.job_id
                GROUP BY job.job_id ) AS sja ON sja.job_id = sj.job_id
            WHERE Enabled = 1
          username: '{$MSSQL.USER}'
          password: '{$MSSQL.PASSWORD}'
          description: 'The item gets sql agent job status.'
          tags:
            -
              tag: component
              value: raw
        -
          uuid: 15f9ea1eced74103a481237193315a45
          name: 'MSSQL: Get last backup'
          type: ODBC
          key: 'db.odbc.get[get_last_backup,"{$MSSQL.DSN}"]'
          delay: 10m
          history: '0'
          trends: '0'
          value_type: TEXT
          params: |
            SELECT bs.database_name as dbname,[type], DATEDIFF(SECOND, bs.backup_finish_date, getdate()) as timesincelastbackup, (DATEDIFF(SECOND, bs.backup_start_date, bs.backup_finish_date)) as duration
            FROM msdb.dbo.backupset as bs WHERE bs.database_name not in (
            SELECT
            AGDatabases.database_name AS Databasename
            FROM sys.dm_hadr_availability_group_states States
            INNER JOIN master.sys.availability_groups Groups ON States.group_id = Groups.group_id
            INNER JOIN sys.availability_databases_cluster AGDatabases ON Groups.group_id = AGDatabases.group_id
            WHERE primary_replica != @@Servername OR primary_replica is NULL
            )
            GROUP BY bs.database_name, backup_finish_date, [type], backup_start_date
            HAVING backup_finish_date = (SELECT MAX(backup_finish_date) from msdb.dbo.backupset WHERE database_name = bs.database_name AND bs.type = [type])
            ORDER BY bs.database_name
          username: '{$MSSQL.USER}'
          password: '{$MSSQL.PASSWORD}'
          description: 'The item gets information about backup processes.'
          tags:
            -
              tag: component
              value: raw
        -
          uuid: e745a9ad0da842f9ac674307e6c95101
          name: 'MSSQL: Get performance counters'
          type: ODBC
          key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
          delay: 0;m0-59
          history: '0'
          trends: '0'
          status: DISABLED
          value_type: TEXT
          params: |
            SELECT object_name,counter_name,instance_name,cntr_value
            FROM sys.dm_os_performance_counters
            UNION
            SELECT '{$MSSQL.INSTANCE}' as object_name,'Version' as counter_name,@@version as instance_name,0 as cntr_value
            UNION
            SELECT '{$MSSQL.INSTANCE}' as object_name,'Uptime' as counter_name,'' as instance_name,DATEDIFF(second,sqlserver_start_time,GETDATE()) as cntr_value
            FROM sys.dm_os_sys_info
            UNION
            SELECT '{$MSSQL.INSTANCE}:Databases' as object_name,'State' as counter_name,name as instance_name,state as cntr_value
            FROM sys.databases
            UNION
            SELECT a.object_name,'BufferCacheHitRatio' as counter_name,'' as instance_name,cast(a.cntr_value*100.0/b.cntr_value as dec(3,0)) as cntr_value
            FROM sys.dm_os_performance_counters a
            JOIN (SELECT cntr_value,OBJECT_NAME
            FROM sys.dm_os_performance_counters
            WHERE counter_name='Buffer cache hit ratio base' AND OBJECT_NAME='{$MSSQL.INSTANCE}:Buffer Manager') b
            ON a.OBJECT_NAME=b.OBJECT_NAME
            WHERE a.counter_name='Buffer cache hit ratio' AND a.OBJECT_NAME='{$MSSQL.INSTANCE}:Buffer Manager'
            UNION
            SELECT a.object_name,'WorktablesFromCacheRatio' as counter_name,'' as instance_name,cast(a.cntr_value*100.0/b.cntr_value as dec(3,0)) as cntr_value
            FROM sys.dm_os_performance_counters a
            JOIN (SELECT cntr_value,OBJECT_NAME
            FROM sys.dm_os_performance_counters
            WHERE counter_name='Worktables From Cache Base' AND OBJECT_NAME='{$MSSQL.INSTANCE}:Access Methods') b
            ON a.OBJECT_NAME=b.OBJECT_NAME
            WHERE a.counter_name='Worktables From Cache Ratio' AND a.OBJECT_NAME='{$MSSQL.INSTANCE}:Access Methods'
            UNION
            SELECT a.object_name,'CacheHitRatio' as counter_name,'_Total' as instance_name,cast(a.cntr_value*100.0/b.cntr_value as dec(3,0)) as cntr_value
            FROM sys.dm_os_performance_counters a
            JOIN (SELECT cntr_value,OBJECT_NAME
            FROM sys.dm_os_performance_counters
            WHERE counter_name='Cache Hit Ratio base' AND OBJECT_NAME='{$MSSQL.INSTANCE}:Plan Cache' AND instance_name='_Total') b
            ON a.OBJECT_NAME=b.OBJECT_NAME
            WHERE a.counter_name='Cache Hit Ratio' AND a.OBJECT_NAME='{$MSSQL.INSTANCE}:Plan Cache' AND instance_name='_Total'
          username: '{$MSSQL.USER}'
          password: '{$MSSQL.PASSWORD}'
          description: 'The item gets server global status information.'
          tags:
            -
              tag: component
              value: raw
        -
          uuid: 58dc1cf022224b7a9a108088c729341a
          name: 'MSSQL: Get performance counters - Access Methods'
          type: ODBC
          key: 'db.odbc.get[get_status_variables_AccessMethods,"{$MSSQL.DSN}"]'
          delay: 0;m0-59
          history: '0'
          trends: '0'
          value_type: TEXT
          params: |
            SELECT object_name, counter_name, instance_name, cntr_value
            FROM sys.dm_os_performance_counters
            WHERE OBJECT_NAME='{$MSSQL.INSTANCE}:Access Methods'
            UNION
            SELECT 
            	a.object_name, 'WorktablesFromCacheRatio' as counter_name, '' as instance_name,	cast(a.cntr_value*100.0/b.cntr_value as dec(3,0)) as cntr_value
            FROM sys.dm_os_performance_counters a
            JOIN (
            	SELECT 
            		cntr_value,	OBJECT_NAME
            	FROM sys.dm_os_performance_counters
            	WHERE counter_name='Worktables From Cache Base' AND OBJECT_NAME='{$MSSQL.INSTANCE}:Access Methods'
            	) b
            ON a.OBJECT_NAME=b.OBJECT_NAME
            WHERE a.counter_name='Worktables From Cache Ratio' AND a.OBJECT_NAME='{$MSSQL.INSTANCE}:Access Methods'
          username: '{$MSSQL.USER}'
          password: '{$MSSQL.PASSWORD}'
          description: 'The item gets server global status information.'
          tags:
            -
              tag: component
              value: raw
        -
          uuid: a2960de2e55345119f633fceb5dde80d
          name: 'MSSQL: Get performance counters - BufferManager'
          type: ODBC
          key: 'db.odbc.get[get_status_variables_BufferManager,"{$MSSQL.DSN}"]'
          delay: 0;m0-59
          history: '0'
          trends: '0'
          value_type: TEXT
          params: |
            SELECT object_name,counter_name,instance_name,cntr_value
            FROM sys.dm_os_performance_counters
            WHERE OBJECT_NAME='{$MSSQL.INSTANCE}:Buffer Manager'
            UNION
            SELECT a.object_name,'BufferCacheHitRatio' as counter_name,'' as instance_name,cast(a.cntr_value*100.0/b.cntr_value as dec(3,0)) as cntr_value
            FROM sys.dm_os_performance_counters a
            JOIN (SELECT cntr_value,OBJECT_NAME
            FROM sys.dm_os_performance_counters
            WHERE counter_name='Buffer cache hit ratio base' AND OBJECT_NAME='{$MSSQL.INSTANCE}:Buffer Manager') b
            ON a.OBJECT_NAME=b.OBJECT_NAME
            WHERE a.counter_name='Buffer cache hit ratio' AND a.OBJECT_NAME='{$MSSQL.INSTANCE}:Buffer Manager'
          username: '{$MSSQL.USER}'
          password: '{$MSSQL.PASSWORD}'
          description: 'The item gets server global status information.'
          tags:
            -
              tag: component
              value: raw
        -
          uuid: 8b2e481f816041ff846c54590fb20baa
          name: 'MSSQL: Get performance counters - General Statistics'
          type: ODBC
          key: 'db.odbc.get[get_status_variables_GeneralStatistics,"{$MSSQL.DSN}"]'
          delay: 0;m0-59
          history: '0'
          trends: '0'
          value_type: TEXT
          params: |
            SELECT object_name,counter_name,instance_name,cntr_value
            FROM sys.dm_os_performance_counters
            WHERE OBJECT_NAME='{$MSSQL.INSTANCE}:General Statistics'
            UNION
            SELECT '{$MSSQL.INSTANCE}' as object_name, 'Version' as counter_name, @@version as instance_name, 0 as cntr_value
            UNION
            SELECT '{$MSSQL.INSTANCE}' as object_name, 'Uptime' as counter_name, '' as instance_name, DATEDIFF(second,sqlserver_start_time,GETDATE()) as cntr_value
            FROM sys.dm_os_sys_info
            UNION
            SELECT '{$MSSQL.INSTANCE}:Databases' as object_name, 'State' as counter_name, name as instance_name, state as cntr_value 
            FROM sys.databases
          username: '{$MSSQL.USER}'
          password: '{$MSSQL.PASSWORD}'
          description: 'The item gets server global status information.'
          tags:
            -
              tag: component
              value: raw
        -
          uuid: bd85d111e6fa433784f5f2f2420bc061
          name: 'MSSQL: Get performance counters - Latches'
          type: ODBC
          key: 'db.odbc.get[get_status_variables_Latches,"{$MSSQL.DSN}"]'
          delay: 0;m0-59
          history: '0'
          trends: '0'
          value_type: TEXT
          params: |
            SELECT object_name,counter_name,instance_name,cntr_value
            FROM sys.dm_os_performance_counters
            WHERE OBJECT_NAME='{$MSSQL.INSTANCE}:Latches'
          username: '{$MSSQL.USER}'
          password: '{$MSSQL.PASSWORD}'
          description: 'The item gets server global status information.'
          tags:
            -
              tag: component
              value: raw
        -
          uuid: d9ff0c9bd7624a39ac60995a58d59058
          name: 'MSSQL: Get performance counters - Locks'
          type: ODBC
          key: 'db.odbc.get[get_status_variables_Locks,"{$MSSQL.DSN}"]'
          delay: 0;m0-59
          history: '0'
          trends: '0'
          value_type: TEXT
          params: |
            SELECT object_name,counter_name,instance_name,cntr_value
            FROM sys.dm_os_performance_counters
            WHERE OBJECT_NAME='{$MSSQL.INSTANCE}:Locks'
          username: '{$MSSQL.USER}'
          password: '{$MSSQL.PASSWORD}'
          description: 'The item gets server global status information.'
          tags:
            -
              tag: component
              value: raw
        -
          uuid: eb79f13967d8447097417797a9a5e01e
          name: 'MSSQL: Get performance counters - Memory Manager'
          type: ODBC
          key: 'db.odbc.get[get_status_variables_MemoryManager,"{$MSSQL.DSN}"]'
          delay: 0;m0-59
          history: '0'
          trends: '0'
          value_type: TEXT
          params: |
            SELECT object_name,counter_name,instance_name,cntr_value
            FROM sys.dm_os_performance_counters
            WHERE OBJECT_NAME='{$MSSQL.INSTANCE}:Memory Manager'
          username: '{$MSSQL.USER}'
          password: '{$MSSQL.PASSWORD}'
          description: 'The item gets server global status information.'
          tags:
            -
              tag: component
              value: raw
        -
          uuid: 365b371053cf40d8adaac80c050f999c
          name: 'MSSQL: Get performance counters - Plan Cache'
          type: ODBC
          key: 'db.odbc.get[get_status_variables_PlanCache,"{$MSSQL.DSN}"]'
          delay: 0;m0-59
          history: '0'
          trends: '0'
          value_type: TEXT
          params: |
            SELECT object_name,counter_name,instance_name,cntr_value
            FROM sys.dm_os_performance_counters
            WHERE OBJECT_NAME='{$MSSQL.INSTANCE}:Plan Cache'
            UNION
            SELECT a.object_name,'CacheHitRatio' as counter_name,'_Total' as instance_name,cast(a.cntr_value*100.0/b.cntr_value as dec(3,0)) as cntr_value
            FROM sys.dm_os_performance_counters a
            JOIN (SELECT cntr_value,OBJECT_NAME
            FROM sys.dm_os_performance_counters
            WHERE counter_name='Cache Hit Ratio base' AND OBJECT_NAME='{$MSSQL.INSTANCE}:Plan Cache' AND instance_name='_Total') b
            ON a.OBJECT_NAME=b.OBJECT_NAME
            WHERE a.counter_name='Cache Hit Ratio' AND a.OBJECT_NAME='{$MSSQL.INSTANCE}:Plan Cache' AND instance_name='_Total'
          username: '{$MSSQL.USER}'
          password: '{$MSSQL.PASSWORD}'
          description: 'The item gets server global status information.'
          tags:
            -
              tag: component
              value: raw
        -
          uuid: 1085fb6cc725402ea17158f2dfe49c15
          name: 'MSSQL: Get performance counters - SQL Errors'
          type: ODBC
          key: 'db.odbc.get[get_status_variables_SQLErrors,"{$MSSQL.DSN}"]'
          delay: 0;m0-59
          history: '0'
          trends: '0'
          value_type: TEXT
          params: |
            SELECT object_name,counter_name,instance_name,cntr_value
            FROM sys.dm_os_performance_counters
            WHERE OBJECT_NAME='{$MSSQL.INSTANCE}:SQL Errors'
          username: '{$MSSQL.USER}'
          password: '{$MSSQL.PASSWORD}'
          description: 'The item gets server global status information.'
          tags:
            -
              tag: component
              value: raw
        -
          uuid: b9d5c011c4a847dda51b6a898ec4b832
          name: 'MSSQL: Get performance counters - SQL Statistics'
          type: ODBC
          key: 'db.odbc.get[get_status_variables_SQLStatistics,"{$MSSQL.DSN}"]'
          delay: 0;m0-59
          history: '0'
          trends: '0'
          value_type: TEXT
          params: |
            SELECT object_name,counter_name,instance_name,cntr_value
            FROM sys.dm_os_performance_counters
            WHERE OBJECT_NAME='{$MSSQL.INSTANCE}:SQL Statistics'
          username: '{$MSSQL.USER}'
          password: '{$MSSQL.PASSWORD}'
          description: 'The item gets server global status information.'
          tags:
            -
              tag: component
              value: raw
        -
          uuid: e1c6e5a1df2443958faf9b65724806f1
          name: 'MSSQL: Get performance counters - Transactions'
          type: ODBC
          key: 'db.odbc.get[get_status_variables_Transactions,"{$MSSQL.DSN}"]'
          delay: 0;m0-59
          history: '0'
          trends: '0'
          value_type: TEXT
          params: |
            SELECT object_name,counter_name,instance_name,cntr_value
            FROM sys.dm_os_performance_counters
            WHERE OBJECT_NAME='{$MSSQL.INSTANCE}:Transactions'
          username: '{$MSSQL.USER}'
          password: '{$MSSQL.PASSWORD}'
          description: 'The item gets server global status information.'
          tags:
            -
              tag: component
              value: raw
        -
          uuid: 317e03581a19445fbc2f732ab787f057
          name: 'MSSQL: Auto-param attempts per second'
          type: DEPENDENT
          key: mssql.autoparam_attempts_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of auto-parameterization attempts per second. The total should be the sum of the failed, safe, and unsafe auto-parameterizations. Auto-parameterization occurs when an instance of SQL Server tries to parameterize a Transact-SQL request by replacing some literals with parameters to me reuse of the resulting cached execution plan across multiple similar-looking requests possible. Note that auto-parameterizations are also known as simple parameterizations in the newer versions of SQL Server. This counter does not include forced parameterizations.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:SQL Statistics'' && @.counter_name==''Auto-Param Attempts/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_SQLStatistics,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: performance
        -
          uuid: feb1d8ff8129494a8f9e333b039c380b
          name: 'MSSQL: Average latch wait time'
          type: CALCULATED
          key: mssql.average_latch_wait_time
          delay: 0;m0-59s3
          history: 7d
          value_type: FLOAT
          units: ms
          params: |
            (last(//mssql.average_latch_wait_time_raw) - last(//mssql.average_latch_wait_time_raw,#2)) /
            (last(//mssql.average_latch_wait_time_base) - last(//mssql.average_latch_wait_time_base,#2) +
            (last(//mssql.average_latch_wait_time_base) - last(//mssql.average_latch_wait_time_base,#2)=0))
          description: 'Average latch wait time (in milliseconds) for latch requests that had to wait.'
          tags:
            -
              tag: component
              value: wait-time
        -
          uuid: 0aadfd4e1be246bbae54bf633de9e930
          name: 'MSSQL: Average latch wait time base'
          type: DEPENDENT
          key: mssql.average_latch_wait_time_base
          delay: '0'
          history: 7d
          description: 'For internal use only.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Latches'' && @.counter_name==''Average Latch Wait Time Base'')].cntr_value.first()'
          master_item:
            key: 'db.odbc.get[get_status_variables_Latches,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: wait-time
        -
          uuid: dee86caa6ccc470fa8ae8520179a1c57
          name: 'MSSQL: Average latch wait time raw'
          type: DEPENDENT
          key: mssql.average_latch_wait_time_raw
          delay: '0'
          history: 7d
          units: ms
          description: 'Average latch wait time (in milliseconds) for latch requests that had to wait.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Latches'' && @.counter_name==''Average Latch Wait Time (ms)'')].cntr_value.first()'
          master_item:
            key: 'db.odbc.get[get_status_variables_Latches,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: wait-time
        -
          uuid: dd25b5f350d14feb936229ff15e25f71
          name: 'MSSQL: Total average wait time'
          type: CALCULATED
          key: mssql.average_wait_time
          delay: 0;m0-59s3
          history: 7d
          value_type: FLOAT
          units: ms
          params: |
            (last(//mssql.average_wait_time_raw) - last(//mssql.average_wait_time_raw,#2)) /
            (last(//mssql.average_wait_time_base) - last(//mssql.average_wait_time_base,#2) +
            (last(//mssql.average_wait_time_base) - last(//mssql.average_wait_time_base,#2)=0))
          description: 'The average wait time, in milliseconds, for each lock request that had to wait.'
          tags:
            -
              tag: component
              value: wait-time
          triggers:
            -
              uuid: 296e2b2a19ad436f894630c1f4031905
              expression: 'min(/Template MSSQL by ODBC Proxy/mssql.average_wait_time,5m)>{$MSSQL.AVERAGE_WAIT_TIME.MAX}'
              name: 'MSSQL: Total average wait time for locks is high'
              event_name: 'MSSQL: Total average wait time for locks is high (over {$MSSQL.AVERAGE_WAIT_TIME.MAX}ms for 5m)'
              priority: WARNING
              description: 'An average wait time longer than 500ms may indicate excessive blocking. This value should generally correlate to ''Lock Waits/sec'' and move up or down with it accordingly.'
              tags:
                -
                  tag: scope
                  value: performance
        -
          uuid: 29ff5278a28a4a869e599fd411bdb844
          name: 'MSSQL: Total average wait time base'
          type: DEPENDENT
          key: mssql.average_wait_time_base
          delay: '0'
          history: 7d
          description: 'For internal use only.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Locks'' && @.counter_name==''Average Wait Time Base'' && @.instance_name==''_Total'')].cntr_value.first()'
          master_item:
            key: 'db.odbc.get[get_status_variables_Locks,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: wait-time
        -
          uuid: 2c7b34eab7bf427b9b6aad80704dbf7b
          name: 'MSSQL: Total average wait time raw'
          type: DEPENDENT
          key: mssql.average_wait_time_raw
          delay: '0'
          history: 7d
          units: ms
          description: 'Average amount of wait time (in milliseconds) for each lock request that resulted in a wait. Information for all locks.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Locks'' && @.counter_name==''Average Wait Time (ms)'' && @.instance_name==''_Total'')].cntr_value.first()'
          master_item:
            key: 'db.odbc.get[get_status_variables_Locks,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: wait-time
        -
          uuid: 6a3dec954b9b4a44bd5e23671350aa75
          name: 'MSSQL: Batch requests per second'
          type: DEPENDENT
          key: mssql.batch_requests_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: rps
          description: 'Number of Transact-SQL command batches received per second. This statistic is affected by all constraints (such as I/O, number of users, cache size, complexity of requests, and so on). High batch requests mean good throughput.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:SQL Statistics'' && @.counter_name==''Batch Requests/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_SQLStatistics,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: performance
        -
          uuid: 235c8a9623ad440ea6c9e7e2a1747cf2
          name: 'MSSQL: Buffer cache hit ratio'
          type: DEPENDENT
          key: mssql.buffer_cache_hit_ratio
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: '%'
          description: 'Indicates the percentage of pages found in the buffer cache without having to read from disk. The ratio is the total number of cache hits divided by the total number of cache lookups over the last few thousand page accesses. After a long period of time, the ratio changes very little. Since reading from the cache is much less expensive than reading from the disk, a higher value is preferred for this item. To increase the buffer cache hit ratio, consider increasing the amount of memory available to SQL Server or using the buffer pool extension feature.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Buffer Manager'' && @.counter_name==''BufferCacheHitRatio'')].cntr_value.first()'
          master_item:
            key: 'db.odbc.get[get_status_variables_BufferManager,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: cache
          triggers:
            -
              uuid: e5f36ac8bac64abc8ceb88ba3b059c5d
              expression: 'max(/Template MSSQL by ODBC Proxy/mssql.buffer_cache_hit_ratio,5m)<{$MSSQL.BUFFER_CACHE_RATIO.MIN.CRIT}'
              name: 'MSSQL: Percentage of the buffer cache efficiency is low'
              event_name: 'MSSQL: Percentage of the buffer cache efficiency is low (below {$MSSQL.BUFFER_CACHE_RATIO.MIN.CRIT}% for 5m)'
              status: DISABLED
              priority: HIGH
              description: 'Too low buffer cache hit ratio.'
              tags:
                -
                  tag: scope
                  value: performance
            -
              uuid: 1d47790c154c41d080b69bf289c23a86
              expression: 'max(/Template MSSQL by ODBC Proxy/mssql.buffer_cache_hit_ratio,5m)<{$MSSQL.BUFFER_CACHE_RATIO.MIN.WARN}'
              name: 'MSSQL: Percentage of the buffer cache efficiency is low'
              event_name: 'MSSQL: Percentage of the buffer cache efficiency is low (below {$MSSQL.BUFFER_CACHE_RATIO.MIN.WARN}% for 5m)'
              priority: WARNING
              description: 'Low buffer cache hit ratio.'
              dependencies:
                -
                  name: 'MSSQL: Percentage of the buffer cache efficiency is low'
                  expression: 'max(/Template MSSQL by ODBC Proxy/mssql.buffer_cache_hit_ratio,5m)<{$MSSQL.BUFFER_CACHE_RATIO.MIN.CRIT}'
              tags:
                -
                  tag: scope
                  value: performance
        -
          uuid: c58dfe889cf442b58433fe0f36b99565
          name: 'MSSQL: Cache hit ratio'
          type: DEPENDENT
          key: mssql.cache_hit_ratio
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: '%'
          description: 'Ratio between cache hits and lookups.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Plan Cache'' && @.counter_name==''CacheHitRatio'' && @.instance_name==''_Total'')].cntr_value.first()'
          master_item:
            key: 'db.odbc.get[get_status_variables_PlanCache,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: cache
        -
          uuid: 6db37fad6c124ba8a9832cda7fe4d083
          name: 'MSSQL: Cache objects in use'
          type: DEPENDENT
          key: mssql.cache_objects_in_use
          delay: '0'
          history: 7d
          description: 'Number of cache objects in use.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Plan Cache'' && @.counter_name==''Cache Objects in use'' && @.instance_name==''_Total'')].cntr_value.first()'
          master_item:
            key: 'db.odbc.get[get_status_variables_PlanCache,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: cache
        -
          uuid: 4bc68cc7da8c4a0b818163c3975c6ba8
          name: 'MSSQL: Cache object counts'
          type: DEPENDENT
          key: mssql.cache_object_counts
          delay: '0'
          history: 7d
          description: 'Number of cache objects in the cache.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Plan Cache'' && @.counter_name==''Cache Object Counts'' && @.instance_name==''_Total'')].cntr_value.first()'
          master_item:
            key: 'db.odbc.get[get_status_variables_PlanCache,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: cache
        -
          uuid: 70312e5f0bc543faa7ba4d4054f41ad0
          name: 'MSSQL: Cache pages'
          type: DEPENDENT
          key: mssql.cache_pages
          delay: '0'
          history: 7d
          description: 'Number of 8-kilobyte (KB) pages used by cache objects.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Plan Cache'' && @.counter_name==''Cache Pages'' && @.instance_name==''_Total'')].cntr_value.first()'
          master_item:
            key: 'db.odbc.get[get_status_variables_PlanCache,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: cache
            -
              tag: component
              value: page
        -
          uuid: 25b1f605a3484b74bad7bc1b90f13364
          name: 'MSSQL: Checkpoint pages per second'
          type: DEPENDENT
          key: mssql.checkpoint_pages_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Indicates the number of pages flushed to disk per second by a checkpoint or other operation which required all dirty pages to be flushed.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Buffer Manager'' && @.counter_name==''Checkpoint pages/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_BufferManager,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: page
            -
              tag: component
              value: performance
        -
          uuid: abe2be9075174bb8b974d42a9b49797a
          name: 'MSSQL: Database pages'
          type: DEPENDENT
          key: mssql.database_pages
          delay: '0'
          history: 7d
          description: 'Indicates the number of pages in the buffer pool with database content.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Buffer Manager'' && @.counter_name==''Database pages'')].cntr_value.first()'
          master_item:
            key: 'db.odbc.get[get_status_variables_BufferManager,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: page
        -
          uuid: e194b9fa6552467eb7859d6bb2df8375
          name: 'MSSQL: Total data file size'
          type: DEPENDENT
          key: mssql.data_files_size
          delay: '0'
          history: 7d
          units: B
          description: 'Total size of all data files.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Databases'' && @.counter_name==''Data File(s) Size (KB)'' && @.instance_name==''_Total'')].cntr_value.first()'
            -
              type: MULTIPLIER
              parameters:
                - '1024'
          master_item:
            key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: application
        -
          uuid: fcd963d2df0d4711a57e9df825e5c52a
          name: 'MSSQL: Total errors per second'
          type: DEPENDENT
          key: mssql.errors_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of errors per second.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:SQL Errors'' && @.counter_name==''Errors/sec'' && @.instance_name==''_Total'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_SQLErrors,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: error
            -
              tag: component
              value: performance
        -
          uuid: 38aad0eb09094250baf96b91f9d54d59
          name: 'MSSQL: Failed auto-params per second'
          type: DEPENDENT
          key: mssql.failed_autoparams_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of failed auto-parameterization attempts per second. This number should be small. Note that auto-parameterizations are also known as simple parameterizations in the newer versions of SQL Server.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:SQL Statistics'' && @.counter_name==''Failed Auto-Params/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_SQLStatistics,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: performance
        -
          uuid: 02417396cf5240ccb21f4f6c7e75d24e
          name: 'MSSQL: Forwarded records per second'
          type: DEPENDENT
          key: mssql.forwarded_records_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of records per second fetched through forwarded record pointers.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Access Methods'' && @.counter_name==''Forwarded Records/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: performance
        -
          uuid: 0432a59c75004483a1251e551fcc4271
          name: 'MSSQL: Free list stalls per second'
          type: DEPENDENT
          key: mssql.free_list_stalls_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: rps
          description: 'Indicates the number of requests per second that had to wait for a free page.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Buffer Manager'' && @.counter_name==''Free list stalls/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_BufferManager,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: performance
          triggers:
            -
              uuid: 09d1c7437007489d981bb44084f560d6
              expression: 'min(/Template MSSQL by ODBC Proxy/mssql.free_list_stalls_sec.rate,5m)>{$MSSQL.FREE_LIST_STALLS.MAX}'
              name: 'MSSQL: Number of rps waiting for a free page is high'
              event_name: 'MSSQL: Number of rps waiting for a free page is high (over {$MSSQL.FREE_LIST_STALLS.MAX} for 5m)'
              status: DISABLED
              priority: WARNING
              description: 'Some requests have to wait for a free page.'
              tags:
                -
                  tag: scope
                  value: performance
        -
          uuid: 56ca2c22804a4d79bf76f1d12682275b
          name: 'MSSQL: Full scans per second'
          type: DEPENDENT
          key: mssql.full_scans_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of unrestricted full scans per second. These can be either base-table or full-index scans. Values greater than 1 or 2 indicate that there are table / Index page scans. If that is combined with high CPU, this counter requires further investigation, otherwise, if the full scans are on small tables, it can be ignored.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Access Methods'' && @.counter_name==''Full Scans/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_AccessMethods,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: performance
        -
          uuid: 0a71ee5ddab8470e9e513c8d7c1be545
          name: 'MSSQL: Granted Workspace Memory'
          type: DEPENDENT
          key: mssql.granted_workspace_memory
          delay: '0'
          history: 7d
          units: B
          description: 'Specifies the total amount of memory currently granted to executing processes, such as hash, sort, bulk copy, and index creation operations.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Memory Manager'' && @.counter_name==''Granted Workspace Memory (KB)'')].cntr_value.first()'
            -
              type: MULTIPLIER
              parameters:
                - '1024'
          master_item:
            key: 'db.odbc.get[get_status_variables_MemoryManager,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: memory
        -
          uuid: e4eb21ec13fb4be99258fc571f3171bd
          name: 'MSSQL: Index searches per second'
          type: DEPENDENT
          key: mssql.index_searches_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of index searches per second. These are used to start a range scan, reposition a range scan, revalidate a scan point, fetch a single index record, and search down the index to locate where to insert a new row.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Access Methods'' && @.counter_name==''Index Searches/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_AccessMethods,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: performance
        -
          uuid: 109cde9742b84e229ef70d21c28c2641
          name: 'MSSQL: Errors per second (Info errors)'
          type: DEPENDENT
          key: mssql.info_errors_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of errors per second.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:SQL Errors'' && @.counter_name==''Errors/sec'' && @.instance_name==''Info Errors'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_SQLErrors,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: error
            -
              tag: component
              value: performance
        -
          uuid: b988dd28b73047e7973ff202c111b1fe
          name: 'MSSQL: Errors per second (Kill connection errors)'
          type: DEPENDENT
          key: mssql.kill_connection_errors_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of errors per second.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:SQL Errors'' && @.counter_name==''Errors/sec'' && @.instance_name==''Kill Connection Errors'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_SQLErrors,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: error
            -
              tag: component
              value: performance
        -
          uuid: a81ec3c494ea41e4bb2e271c5e05a0ea
          name: 'MSSQL: Latch waits per second'
          type: DEPENDENT
          key: mssql.latch_waits_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: rps
          description: 'The number of latch requests that could not be granted immediately. Latches are lightweight means of holding a very transient server resource, such as an address in memory.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Latches'' && @.counter_name==''Latch Waits/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_Latches,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: performance
            -
              tag: component
              value: wait-time
        -
          uuid: 8fd2ae9c898b42cab9c4f9a16dee51c3
          name: 'MSSQL: Lazy writes per second'
          type: DEPENDENT
          key: mssql.lazy_writes_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Indicates the number of buffers written per second by the buffer manager''s lazy writer. The lazy writer is a system process that flushes out batches of dirty, aged buffers (buffers that contain changes that must be written back to disk before the buffer can be reused for a different page) and makes them available to user processes. The lazy writer eliminates the need to perform frequent checkpoints in order to create available buffers.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Buffer Manager'' && @.counter_name==''Lazy writes/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_BufferManager,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: performance
          triggers:
            -
              uuid: 34254f9619c74fca8e7914730fea33c2
              expression: 'min(/Template MSSQL by ODBC Proxy/mssql.lazy_writes_sec.rate,5m)>{$MSSQL.LAZY_WRITES.MAX}'
              name: 'MSSQL: Number of buffers written per second by the lazy writer is high'
              event_name: 'MSSQL: Number of buffers written per second by the lazy writer is high (over {$MSSQL.LAZY_WRITES.MAX} for 5m)'
              status: DISABLED
              priority: WARNING
              description: 'The number of buffers written per second by the buffer manager''s lazy writer exceeds the threshold.'
              tags:
                -
                  tag: scope
                  value: performance
        -
          uuid: 099ebe9269be40b89f8bfe2df14f6e84
          name: 'MSSQL: Total lock requests per second'
          type: DEPENDENT
          key: mssql.lock_requests_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: rps
          description: 'Number of new locks and lock conversions per second requested from the lock manager.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Locks'' && @.counter_name==''Lock Requests/sec'' && @.instance_name==''_Total'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_Locks,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: lock
            -
              tag: component
              value: performance
          triggers:
            -
              uuid: d1ba24b5b68e4acc8e617937a6a7f37c
              expression: 'min(/Template MSSQL by ODBC Proxy/mssql.lock_requests_sec.rate,5m)>{$MSSQL.LOCK_REQUESTS.MAX}'
              name: 'MSSQL: Total number of locks per second is high'
              event_name: 'MSSQL: Total number of locks per second is high (over {$MSSQL.LOCK_REQUESTS.MAX} for 5m)'
              status: DISABLED
              priority: WARNING
              description: 'Number of new locks and lock conversions per second requested from the lock manager is high.'
              tags:
                -
                  tag: scope
                  value: performance
        -
          uuid: 8faff3530a564eca812a2150567139d2
          name: 'MSSQL: Total lock requests per second that timed out'
          type: DEPENDENT
          key: mssql.lock_timeouts_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: rps
          description: 'Number of timed out lock requests per second, including requests for NOWAIT locks.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Locks'' && @.counter_name==''Lock Timeouts/sec'' && @.instance_name==''_Total'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_Locks,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: lock
            -
              tag: component
              value: performance
          triggers:
            -
              uuid: 22bf3f0027f84cb48bdf9fc69f371283
              expression: 'min(/Template MSSQL by ODBC Proxy/mssql.lock_timeouts_sec.rate,5m)>{$MSSQL.LOCK_TIMEOUTS.MAX}'
              name: 'MSSQL: Total lock requests per second that timed out is high'
              event_name: 'MSSQL: Total lock requests per second that timed out is high (over {$MSSQL.LOCK_TIMEOUTS.MAX} for 5m)'
              status: DISABLED
              priority: WARNING
              description: 'The total number of timed out lock requests per second, including requests for NOWAIT locks, is high.'
              tags:
                -
                  tag: scope
                  value: performance
        -
          uuid: 241249135df545f18147618f6f203dc5
          name: 'MSSQL: Total lock requests per second that required waiting'
          type: DEPENDENT
          key: mssql.lock_waits_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: rps
          description: 'Number of lock requests per second that required the caller to wait.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Locks'' && @.counter_name==''Lock Waits/sec'' && @.instance_name==''_Total'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_Locks,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: lock
            -
              tag: component
              value: performance
          triggers:
            -
              uuid: 9226d5accad94a12bb3e0c0b3e3cee26
              expression: 'min(/Template MSSQL by ODBC Proxy/mssql.lock_waits_sec.rate,5m)>0'
              name: 'MSSQL: Some blocking is occurring for 5m'
              status: DISABLED
              priority: AVERAGE
              description: 'Values greater than zero indicate at least some blocking is occurring, while a value of zero can quickly eliminate blocking as a potential root-cause problem.'
              tags:
                -
                  tag: scope
                  value: performance
        -
          uuid: 7b137fd269bc4ba99e9e2f18f0499bc4
          name: 'MSSQL: Lock wait time'
          type: DEPENDENT
          key: mssql.lock_wait_time
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: ms
          description: 'Average of total wait time (in milliseconds) for locks in the last second.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Locks'' && @.counter_name==''Lock Wait Time (ms)'' && @.instance_name==''_Total'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_Locks,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: lock
        -
          uuid: 9c67c7e216c445ceb429af926f6a4e85
          name: 'MSSQL: Logins per second'
          type: DEPENDENT
          key: mssql.logins_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Total number of logins started per second. This does not include pooled connections. Any value over 2 may indicate insufficient connection pooling.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:General Statistics'' && @.counter_name==''Logins/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_GeneralStatistics,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: performance
        -
          uuid: 08e6dde513634b6eb56c9e557c79d95b
          name: 'MSSQL: Logouts per second'
          type: DEPENDENT
          key: mssql.logouts_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Total number of logout operations started per second. Any value over 2 may indicate insufficient connection pooling.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:General Statistics'' && @.counter_name==''Logouts/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_GeneralStatistics,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: performance
        -
          uuid: 8c196fff524e41bf879c1be7c0e38486
          name: 'MSSQL: Total log file size'
          type: DEPENDENT
          key: mssql.log_files_size
          delay: '0'
          history: 7d
          units: B
          description: 'Total size of all the transaction log files.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Databases'' && @.counter_name==''Log File(s) Size (KB)'' && @.instance_name==''_Total'')].cntr_value.first()'
            -
              type: MULTIPLIER
              parameters:
                - '1024'
          master_item:
            key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: log
        -
          uuid: c8382eac4abc4b70a5c3faa005128ed1
          name: 'MSSQL: Total log file used size'
          type: DEPENDENT
          key: mssql.log_files_used_size
          delay: '0'
          history: 7d
          units: B
          description: 'The cumulative used size of all the log files in the database.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Databases'' && @.counter_name==''Log File(s) Used Size (KB)'' && @.instance_name==''_Total'')].cntr_value.first()'
            -
              type: MULTIPLIER
              parameters:
                - '1024'
          master_item:
            key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: log
        -
          uuid: 8273b2543d144d2f99eb358c1d9bed09
          name: 'MSSQL: Maximum workspace memory'
          type: DEPENDENT
          key: mssql.maximum_workspace_memory
          delay: '0'
          history: 7d
          units: B
          description: 'Indicates the maximum amount of memory available for executing processes, such as hash, sort, bulk copy, and index creation operations.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Memory Manager'' && @.counter_name==''Maximum Workspace Memory (KB)'')].cntr_value.first()'
            -
              type: MULTIPLIER
              parameters:
                - '1024'
          master_item:
            key: 'db.odbc.get[get_status_variables_MemoryManager,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: memory
        -
          uuid: 2a50c4389ab14e909da65804998e6c63
          name: 'MSSQL: Memory grants outstanding'
          type: DEPENDENT
          key: mssql.memory_grants_outstanding
          delay: '0'
          history: 7d
          description: 'Specifies the total number of processes that have successfully acquired a workspace memory grant.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Memory Manager'' && @.counter_name==''Memory Grants Outstanding'')].cntr_value.first()'
          master_item:
            key: 'db.odbc.get[get_status_variables_MemoryManager,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: memory
        -
          uuid: 6becb167fe7344b6abed2a318f8896c7
          name: 'MSSQL: Memory grants pending'
          type: DEPENDENT
          key: mssql.memory_grants_pending
          delay: '0'
          history: 7d
          description: 'Specifies the total number of processes waiting for a workspace memory grant.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Memory Manager'' && @.counter_name==''Memory Grants Pending'')].cntr_value.first()'
          master_item:
            key: 'db.odbc.get[get_status_variables_MemoryManager,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: memory
        -
          uuid: f5973d4ca9d64baca5a84c3cce287a2f
          name: 'MSSQL: Total lock requests per second that have deadlocks'
          type: DEPENDENT
          key: mssql.number_deadlocks_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: rps
          description: 'Number of lock requests per second that resulted in a deadlock.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Locks'' && @.counter_name==''Number of Deadlocks/sec'' && @.instance_name==''_Total'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_Locks,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: deadlock
            -
              tag: component
              value: performance
          triggers:
            -
              uuid: 87b2f11dc18d410e88c50a434101262d
              expression: 'min(/Template MSSQL by ODBC Proxy/mssql.number_deadlocks_sec.rate,5m)>{$MSSQL.DEADLOCKS.MAX}'
              name: 'MSSQL: Number of deadlock is high'
              event_name: 'MSSQL: Number of deadlock is high (over {$MSSQL.DEADLOCKS.MAX} for 5m)'
              priority: AVERAGE
              description: 'Too many deadlocks are occurring currently.'
              tags:
                -
                  tag: scope
                  value: performance
        -
          uuid: 9b9b353ba1d1453daeff66e6f537425c
          name: 'MSSQL: Errors per second (DB offline errors)'
          type: DEPENDENT
          key: mssql.offline_errors_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of errors per second.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:SQL Errors'' && @.counter_name==''Errors/sec'' && @.instance_name==''DB Offline Errors'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_SQLErrors,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: error
            -
              tag: component
              value: performance
        -
          uuid: 084b1fc579d5426a8daa05a4802424cc
          name: 'MSSQL: Page life expectancy'
          type: DEPENDENT
          key: mssql.page_life_expectancy
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: s
          description: 'Indicates the number of seconds a page will stay in the buffer pool without references.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Buffer Manager'' && @.counter_name==''Page life expectancy'')].cntr_value.first()'
          master_item:
            key: 'db.odbc.get[get_status_variables_BufferManager,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: page
          triggers:
            -
              uuid: 311b2554df96461684006308ecef6644
              expression: 'max(/Template MSSQL by ODBC Proxy/mssql.page_life_expectancy,15m)<{$MSSQL.PAGE_LIFE_EXPECTANCY.MIN}'
              name: 'MSSQL: Page life expectancy is low'
              event_name: 'MSSQL: Page life expectancy is low (less {$MSSQL.PAGE_LIFE_EXPECTANCY.MIN}min for 15m)'
              priority: HIGH
              description: 'The page stays in the buffer pool without references of less time than the threshold value.'
              tags:
                -
                  tag: scope
                  value: performance
        -
          uuid: f1ad05f5ef944f1190306860ae40a4a0
          name: 'MSSQL: Page lookups per second'
          type: DEPENDENT
          key: mssql.page_lookups_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: rps
          description: 'Indicates the number of requests per second to find a page in the buffer pool.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Buffer Manager'' && @.counter_name==''Page lookups/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_BufferManager,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: performance
        -
          uuid: 7a143c7960eb404ab76f18869b045a6c
          name: 'MSSQL: Page reads per second'
          type: DEPENDENT
          key: mssql.page_reads_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Indicates the number of physical database page reads that are issued per second. This statistic displays the total number of physical page reads across all databases. Because physical I/O is expensive, you may be able to minimize the cost, either by using a larger data cache, intelligent indexes, and more efficient queries, or by changing the database design.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Buffer Manager'' && @.counter_name==''Page reads/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_BufferManager,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: page
            -
              tag: component
              value: performance
          triggers:
            -
              uuid: e0abf2b0da4c404ba0bb4eb97cfead19
              expression: 'min(/Template MSSQL by ODBC Proxy/mssql.page_reads_sec.rate,5m)>{$MSSQL.PAGE_READS.MAX}'
              name: 'MSSQL: Number of physical database page reads per second is high'
              event_name: 'MSSQL: Number of physical database page reads per second is high (over {$MSSQL.PAGE_READS.MAX} for 5m)'
              status: DISABLED
              priority: WARNING
              description: 'The physical database page reads are issued too frequently.'
              tags:
                -
                  tag: scope
                  value: performance
        -
          uuid: 8dd69d7e4f034b7db4809c2e488a912e
          name: 'MSSQL: Page splits per second'
          type: DEPENDENT
          key: mssql.page_splits_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of page splits per second that occur as the result of overflowing index pages.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Access Methods'' && @.counter_name==''Page Splits/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_AccessMethods,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: page
            -
              tag: component
              value: performance
        -
          uuid: adaf7d45cd8443538615c4e59f0a1ab6
          name: 'MSSQL: Page writes per second'
          type: DEPENDENT
          key: mssql.page_writes_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Indicates the number of physical database page writes that are issued per second.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Buffer Manager'' && @.counter_name==''Page writes/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_BufferManager,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: page
            -
              tag: component
              value: performance
          triggers:
            -
              uuid: 6cc28eb63d9e4920ac30a7ca1ba0d867
              expression: 'min(/Template MSSQL by ODBC Proxy/mssql.page_writes_sec.rate,5m)>{$MSSQL.PAGE_WRITES.MAX}'
              name: 'MSSQL: Number of physical database page writes per second is high'
              event_name: 'MSSQL: Number of physical database page writes per second is high (over {$MSSQL.PAGE_WRITES.MAX} for 5m)'
              status: DISABLED
              priority: WARNING
              description: 'The physical database page writes are issued too frequently.'
              tags:
                -
                  tag: scope
                  value: performance
        -
          uuid: e03808e12fc64cde999ac28487b961f9
          name: 'MSSQL: Percent of Adhoc queries running'
          type: CALCULATED
          key: mssql.percent_of_adhoc_queries
          delay: 0;m0-59s3
          history: 7d
          value_type: FLOAT
          units: '%'
          params: |
            last(//mssql.sql_compilations_sec.rate) * 100 /
            (last(//mssql.batch_requests_sec.rate) + (last(//mssql.batch_requests_sec.rate)=0))
          description: 'The ratio of SQL compilations per second to Batch requests per second in percentage.'
          tags:
            -
              tag: component
              value: application
          triggers:
            -
              uuid: 6ccbfa0647164fab96f3be36e98b3cd2
              expression: 'min(/Template MSSQL by ODBC Proxy/mssql.percent_of_adhoc_queries,15m) > {$MSSQL.PERCENT_COMPILATIONS.MAX}'
              name: 'MSSQL: Percent of adhoc queries running is high'
              event_name: 'MSSQL: Percent of adhoc queries running is over {$MSSQL.PERCENT_COMPILATIONS.MAX}% for 15m'
              status: DISABLED
              priority: WARNING
              description: 'The lower this value is the better. High values often indicate excessive adhoc querying and should be as low as possible. If excessive adhoc querying is happening, try rewriting the queries as procedures or invoke the queries using sp_executeSQL. When rewriting isn''t possible, consider using a plan guide or setting the database to parameterization forced mode.'
              tags:
                -
                  tag: scope
                  value: performance
        -
          uuid: b4a3b32155c8450aa5b0d49b68631d0a
          name: 'MSSQL: Percent of Recompiled Transact-SQL Objects'
          type: CALCULATED
          key: mssql.percent_recompilations_to_compilations
          delay: 0;m0-59s3
          history: 7d
          value_type: FLOAT
          units: '%'
          params: |
            last(//mssql.sql_recompilations_sec.rate) * 100 /
            (last(//mssql.sql_compilations_sec.rate) + (last(//mssql.sql_compilations_sec.rate)=0))
          description: 'The ratio of SQL re-compilations per second to SQL compilations per second in percentage.'
          tags:
            -
              tag: component
              value: application
          triggers:
            -
              uuid: 9b4fca6cd29a4a30b1f7c0a01e91da0c
              expression: 'min(/Template MSSQL by ODBC Proxy/mssql.percent_recompilations_to_compilations,15m) > {$MSSQL.PERCENT_RECOMPILATIONS.MAX}'
              name: 'MSSQL: Percent of times statement recompiles is high'
              event_name: 'MSSQL: Percent of times statement recompiles is over {$MSSQL.PERCENT_RECOMPILATIONS.MAX}% for 15m'
              status: DISABLED
              priority: WARNING
              description: 'This number should be at or near zero, since recompiles can cause deadlocks and exclusive compile locks. This counter''s value should follow in proportion to “Batch Requests/sec” and “SQL Compilations/sec”.'
              tags:
                -
                  tag: scope
                  value: performance
        -
          uuid: 2cc56a49647842db8bd37d6d0db71450
          name: 'MSSQL: Number of blocked processes'
          type: DEPENDENT
          key: mssql.processes_blocked
          delay: '0'
          history: 7d
          description: 'Number of currently blocked processes.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:General Statistics'' && @.counter_name==''Processes blocked'')].cntr_value.first()'
          master_item:
            key: 'db.odbc.get[get_status_variables_GeneralStatistics,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: application
        -
          uuid: 41620cdab232468790a43e0d426946c3
          name: 'MSSQL: Read-ahead pages per second'
          type: DEPENDENT
          key: mssql.readahead_pages_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Indicates the number of pages read per second in anticipation of use.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Buffer Manager'' && @.counter_name==''Readahead pages/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_BufferManager,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: page
            -
              tag: component
              value: performance
        -
          uuid: a7ec8f7474c44ab09b2815a391d7374a
          name: 'MSSQL: Safe auto-params per second'
          type: DEPENDENT
          key: mssql.safe_autoparams_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of safe auto-parameterization attempts per second. Safe refers to a determination that a cached execution plan can be shared between different similar-looking Transact-SQL statements. SQL Server makes many auto-parameterization attempts some of which turn out to be safe and others fail. Note that auto-parameterizations are also known as simple parameterizations in the newer versions of SQL Server. This does not include forced parameterizations.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:SQL Statistics'' && @.counter_name==''Safe Auto-Params/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_SQLStatistics,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: performance
        -
          uuid: 4c7d17a685034798aa98b671ddf142fe
          name: 'MSSQL: Full scans to Index searches ratio'
          type: CALCULATED
          key: mssql.scan_to_search
          delay: 0;m0-59s3
          history: 7d
          value_type: FLOAT
          params: 'last(//mssql.full_scans_sec.rate) / (last(//mssql.index_searches_sec.rate) + (last(//mssql.index_searches_sec.rate)=0))'
          description: 'The ratio of Full scans per second to Index searches per second. The threshold recommendation is strictly for OLTP workloads.'
          tags:
            -
              tag: component
              value: application
          triggers:
            -
              uuid: 72012e74ff25403e92e51a83e40a7eee
              expression: 'min(/Template MSSQL by ODBC Proxy/mssql.scan_to_search,15m) > 0.001'
              name: 'MSSQL: Number of index and table scans exceeds index searches in the last 15m'
              status: DISABLED
              priority: WARNING
              description: 'Index searches are preferable to index and table scans. For OLTP applications, optimize for more index searches and less scans (preferably, 1 full scan for every 1000 index searches). Index and table scans are expensive I/O operations.'
              tags:
                -
                  tag: scope
                  value: performance
        -
          uuid: 9142c15a7b424a47b940a73115ffde54
          name: 'MSSQL: SQL compilations per second'
          type: DEPENDENT
          key: mssql.sql_compilations_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of SQL compilations per second. Indicates the number of times the compile code path is entered. Includes runs caused by statement-level recompilations in SQL Server. After SQL Server user activity is stable, this value reaches a steady state.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:SQL Statistics'' && @.counter_name==''SQL Compilations/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_SQLStatistics,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: performance
        -
          uuid: 04966889f4d84020b06303334b127dd6
          name: 'MSSQL: SQL re-compilations per second'
          type: DEPENDENT
          key: mssql.sql_recompilations_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of statement recompiles per second. Counts the number of times statement recompiles are triggered. Generally, you want the recompiles to be low.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:SQL Statistics'' && @.counter_name==''SQL Re-Compilations/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_SQLStatistics,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: performance
        -
          uuid: 8917df0fc92d4d9286613403891d7bc5
          name: 'MSSQL: Table lock escalations per second'
          type: DEPENDENT
          key: mssql.table_lock_escalations.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of times locks on a table were escalated to the TABLE or HoBT granularity.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Access Methods'' && @.counter_name==''Table Lock Escalations/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: lock
            -
              tag: component
              value: performance
        -
          uuid: 6c222ec7b3844f89bb7dd99f034a2583
          name: 'MSSQL: Target pages'
          type: DEPENDENT
          key: mssql.target_pages
          delay: '0'
          history: 7d
          description: 'The optimal number of pages in the buffer pool.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Buffer Manager'' && @.counter_name==''Target pages'')].cntr_value.first()'
          master_item:
            key: 'db.odbc.get[get_status_variables_BufferManager,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: page
        -
          uuid: 27c0bd7c117145aba6881d3c74746c62
          name: 'MSSQL: Target server memory'
          type: DEPENDENT
          key: mssql.target_server_memory
          delay: '0'
          history: 7d
          units: B
          description: 'Indicates the ideal amount of memory the server can consume.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Memory Manager'' && @.counter_name==''Target Server Memory (KB)'')].cntr_value.first()'
            -
              type: MULTIPLIER
              parameters:
                - '1024'
          master_item:
            key: 'db.odbc.get[get_status_variables_MemoryManager,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: memory
        -
          uuid: 0d86448f1f5249098127884924551753
          name: 'MSSQL: Total latch wait Time'
          type: DEPENDENT
          key: mssql.total_latch_wait_time
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: ms
          description: 'Total latch wait time (in milliseconds) for latch requests in the last second. This value should stay stable compared to the number of latch waits per second.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Latches'' && @.counter_name==''Total Latch Wait Time (ms)'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_Latches,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: wait-time
        -
          uuid: 7d6f722b78b74c709b5a9f426859a514
          name: 'MSSQL: Total server memory'
          type: DEPENDENT
          key: mssql.total_server_memory
          delay: '0'
          history: 7d
          units: B
          description: 'Specifies the amount of memory the server has committed using the memory manager.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Memory Manager'' && @.counter_name==''Total Server Memory (KB)'')].cntr_value.first()'
            -
              type: MULTIPLIER
              parameters:
                - '1024'
          master_item:
            key: 'db.odbc.get[get_status_variables_MemoryManager,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: memory
        -
          uuid: 3decf91a7ab5434aacbceadc08d047a1
          name: 'MSSQL: Total transactions number'
          type: DEPENDENT
          key: mssql.transactions
          delay: '0'
          history: 7d
          description: 'The number of currently active transactions of all types.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Transactions'' && @.counter_name==''Transactions'')].cntr_value.first()'
          master_item:
            key: 'db.odbc.get[get_status_variables_Transactions,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: transaction
        -
          uuid: 25af0eca16064fd19e32b9df6a9c1ae9
          name: 'MSSQL: Total transactions per second'
          type: DEPENDENT
          key: mssql.transactions_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Total number of transactions started for all databases per second.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Databases'' && @.counter_name==''Transactions/sec'' && @.instance_name==''_Total'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: performance
            -
              tag: component
              value: transaction
        -
          uuid: 189647750f5d4841b8c4983c16c74d24
          name: 'MSSQL: Unsafe auto-params per second'
          type: DEPENDENT
          key: mssql.unsafe_autoparams_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of unsafe auto-parameterization attempts per second. For example, the query has some characteristics that prevent the cached plan from being shared. These are designated as unsafe. This does not count the number of forced parameterizations.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:SQL Statistics'' && @.counter_name==''Unsafe Auto-Params/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_SQLStatistics,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: performance
        -
          uuid: 91789ae40add457e88126762d729b7a2
          name: 'MSSQL: Uptime'
          type: DEPENDENT
          key: mssql.uptime
          delay: '0'
          history: 2w
          trends: '0'
          units: uptime
          description: 'MS SQL Server uptime in ''N days, hh:mm:ss'' format.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}'' && @.counter_name==''Uptime'')].cntr_value.first()'
          master_item:
            key: 'db.odbc.get[get_status_variables_GeneralStatistics,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: application
          triggers:
            -
              uuid: 283a1cc133034acda8abe29180e9b6cb
              expression: 'nodata(/Template MSSQL by ODBC Proxy/mssql.uptime,30m)=1'
              name: 'MSSQL: Failed to fetch info data'
              event_name: 'MSSQL: Failed to fetch info data (or no data for 30m)'
              priority: INFO
              description: 'Zabbix has not received data for items for the last 30 minutes.'
              dependencies:
                -
                  name: 'MSSQL: Service is unavailable'
                  expression: 'last(/Template MSSQL by ODBC Proxy/net.tcp.service[tcp,{HOST.CONN},{$MSSQL.PORT}])=0'
              tags:
                -
                  tag: scope
                  value: availability
            -
              uuid: bc543a38c1d44b48be900db9830903ff
              expression: 'last(/Template MSSQL by ODBC Proxy/mssql.uptime)<10m'
              name: 'MSSQL: Service has been restarted'
              event_name: 'MSSQL: Service has been restarted (uptime < 10m)'
              priority: INFO
              description: 'Uptime is less than 10 minutes.'
              manual_close: 'YES'
              tags:
                -
                  tag: scope
                  value: notice
        -
          uuid: cf59642c6e904599ac6d87a81ca847c2
          name: 'MSSQL: Number users connected'
          type: DEPENDENT
          key: mssql.user_connections
          delay: '0'
          history: 7d
          description: 'Number of users connected to MS SQL Server.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:General Statistics'' && @.counter_name==''User Connections'')].cntr_value.first()'
          master_item:
            key: 'db.odbc.get[get_status_variables_GeneralStatistics,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: application
        -
          uuid: e32e4bc7585d4e908b6565005edc7b26
          name: 'MSSQL: Errors per second (User errors)'
          type: DEPENDENT
          key: mssql.user_errors_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of errors per second.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:SQL Errors'' && @.counter_name==''Errors/sec'' && @.instance_name==''User Errors'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_SQLErrors,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: error
            -
              tag: component
              value: performance
        -
          uuid: 2425758e85e4418a99192a78c643fd31
          name: 'MSSQL: Version'
          type: DEPENDENT
          key: mssql.version
          delay: '0'
          history: 2w
          trends: '0'
          value_type: CHAR
          description: 'MS SQL Server version.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}'' && @.counter_name==''Version'')].instance_name.first()'
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1d
          master_item:
            key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: application
          triggers:
            -
              uuid: 43360f3527ce4491bbc86be958a6f226
              expression: 'last(/Template MSSQL by ODBC Proxy/mssql.version,#1)<>last(/Template MSSQL by ODBC Proxy/mssql.version,#2) and length(last(/Template MSSQL by ODBC Proxy/mssql.version))>0'
              name: 'MSSQL: Version has changed'
              event_name: 'MSSQL: Version has changed (new version value received: {ITEM.VALUE})'
              status: DISABLED
              priority: INFO
              description: 'MSSQL version has changed. Ack to close.'
              manual_close: 'YES'
              tags:
                -
                  tag: scope
                  value: notice
        -
          uuid: 0fc0b0de5d8440eab9307a80da671be7
          name: 'MSSQL: Work files created per second'
          type: DEPENDENT
          key: mssql.workfiles_created_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of work files created per second. For example, work files can be used to store temporary results for hash joins and hash aggregates.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Access Methods'' && @.counter_name==''Workfiles Created/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: performance
          triggers:
            -
              uuid: 52e7d4a820b447e6aca64db5d9005d51
              expression: 'min(/Template MSSQL by ODBC Proxy/mssql.workfiles_created_sec.rate,5m)>{$MSSQL.WORK_FILES.MAX}'
              name: 'MSSQL: Number of work files created per second is high'
              event_name: 'MSSQL: Number of work files created per second is high (over {$MSSQL.WORK_FILES.MAX} for 5m)'
              status: DISABLED
              priority: AVERAGE
              description: 'Too many work files created per second to store temporary results for hash joins and hash aggregates.'
              tags:
                -
                  tag: scope
                  value: performance
        -
          uuid: d66dccf1630542bb81b0b1cbb667aa0e
          name: 'MSSQL: Work tables created per second'
          type: DEPENDENT
          key: mssql.worktables_created_sec.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of work tables created per second. For example, work tables can be used to store temporary results for query spool, lob variables, XML variables, and cursors.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Access Methods'' && @.counter_name==''Worktables Created/sec'')].cntr_value.first()'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: 'db.odbc.get[get_status_variables_AccessMethods,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: performance
          triggers:
            -
              uuid: 959158df4eaa4cc0900917e16115931e
              expression: 'min(/Template MSSQL by ODBC Proxy/mssql.worktables_created_sec.rate,5m)>{$MSSQL.WORK_TABLES.MAX}'
              name: 'MSSQL: Number of work tables created per second is high'
              event_name: 'MSSQL: Number of work tables created per second is high (over {$MSSQL.WORK_TABLES.MAX} for 5m)'
              status: DISABLED
              priority: AVERAGE
              description: 'Too many work tables created per second to store temporary results for query spool, lob variables, XML variables, and cursors.'
              tags:
                -
                  tag: scope
                  value: performance
        -
          uuid: d8efeb10e3e846599314e13b9258806e
          name: 'MSSQL: Worktables from cache ratio'
          type: DEPENDENT
          key: mssql.worktables_from_cache_ratio
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: '%'
          description: 'Percentage of work tables created where the initial two pages of the work table were not allocated but were immediately available from the work table cache.'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Access Methods'' && @.counter_name==''WorktablesFromCacheRatio'')].cntr_value.first()'
          master_item:
            key: 'db.odbc.get[get_status_variables_AccessMethods,"{$MSSQL.DSN}"]'
          tags:
            -
              tag: component
              value: cache
          triggers:
            -
              uuid: 46be505df9ed4bb287b0aea34d320160
              expression: 'max(/Template MSSQL by ODBC Proxy/mssql.worktables_from_cache_ratio,5m)<{$MSSQL.WORKTABLES_FROM_CACHE_RATIO.MIN.CRIT}'
              name: 'MSSQL: Percentage of work tables available from the work table cache is low'
              event_name: 'MSSQL: Percentage of work tables available from the work table cache is low (below {$MSSQL.WORKTABLES_FROM_CACHE_RATIO.MIN.CRIT}% for 5m)'
              status: DISABLED
              priority: HIGH
              description: 'A value less than 90% may indicate insufficient memory, since execution plans are being dropped, or on 32-bit systems, may indicate the need for an upgrade to a 64-bit system'
              tags:
                -
                  tag: scope
                  value: performance
        -
          uuid: e279aebf5b2e4a3c86631a3251f09fc3
          name: 'MSSQL: Service''s TCP port state'
          type: SIMPLE
          key: 'net.tcp.service[tcp,{HOST.CONN},{$MSSQL.PORT}]'
          delay: 30s
          history: 7d
          description: 'Test the availability of MS SQL Server on a TCP port.'
          valuemap:
            name: 'Service state'
          preprocessing:
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 10m
          tags:
            -
              tag: component
              value: network
          triggers:
            -
              uuid: b3e51a5cd7f44c4f96329da23a8ea0f7
              expression: 'last(/Template MSSQL by ODBC Proxy/net.tcp.service[tcp,{HOST.CONN},{$MSSQL.PORT}])=0'
              name: 'MSSQL: Service is unavailable'
              priority: DISASTER
              description: 'The TCP port of the MS SQL Server service is currently unavailable.'
              tags:
                -
                  tag: scope
                  value: availability
      discovery_rules:
        -
          uuid: ab310a435d5d414193e0b6281c296d8a
          name: 'Availability groups discovery'
          type: ODBC
          key: 'db.odbc.discovery[availability_groups,"{$MSSQL.DSN}"]'
          delay: 1h
          status: DISABLED
          params: |
            SELECT name as group_name
            FROM sys.availability_groups
          username: '{$MSSQL.USER}'
          password: '{$MSSQL.PASSWORD}'
          description: 'Discovery of the existing availability groups.'
          item_prototypes:
            -
              uuid: 6c59ebcda1d543c3a061c7ed75365a62
              name: 'MSSQL AG ''{#GROUP_NAME}'': Get replica states'
              type: ODBC
              key: 'db.odbc.get[{#GROUP_NAME}_replica_states,"{$MSSQL.DSN}"]'
              history: 0h
              trends: '0'
              value_type: TEXT
              params: |
                SELECT ag.name as group_name,
                ISNULL(ags.primary_recovery_health, 2) as primary_recovery_health,
                ISNULL(ags.primary_replica, 'Unknown') as primary_replica,
                ISNULL(ags.secondary_recovery_health, 2) as secondary_recovery_health,
                ags.synchronization_health as synchronization_health
                FROM sys.dm_hadr_availability_group_states ags JOIN sys.availability_groups ag ON ag.group_id = ags.group_id
              username: '{$MSSQL.USER}'
              password: '{$MSSQL.PASSWORD}'
              description: 'Getting replica states - name, primary and secondary health, synchronization health.'
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: component
                  value: raw
            -
              uuid: c110ceff3e5046e59b208c721ac956ea
              name: 'MSSQL AG ''{#GROUP_NAME}'': Primary replica recovery health'
              type: DEPENDENT
              key: 'mssql.primary_recovery_health["{#GROUP_NAME}"]'
              delay: '0'
              history: 7d
              description: |
                Indicates the recovery health of the primary replica:
                0 = In progress
                1 = Online
                2 = Unavailable
              valuemap:
                name: 'MSSQL AG Recovery health'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.group_name==''{#GROUP_NAME}'')].primary_recovery_health.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'db.odbc.get[{#GROUP_NAME}_replica_states,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: component
                  value: availability-group
              trigger_prototypes:
                -
                  uuid: 68b3683157a04907bfa4628fa1d94e88
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.primary_recovery_health["{#GROUP_NAME}"])=0'
                  name: 'MSSQL AG ''{#GROUP_NAME}'': Primary replica recovery health in progress'
                  priority: WARNING
                  description: 'The primary replica is in the synchronization process.'
                  tags:
                    -
                      tag: availability-group
                      value: '{#GROUP_NAME}'
                    -
                      tag: scope
                      value: notice
            -
              uuid: 7b3049b9ee2f46fab2338143e46b24da
              name: 'MSSQL AG ''{#GROUP_NAME}'': Primary replica name'
              type: DEPENDENT
              key: 'mssql.primary_replica["{#GROUP_NAME}"]'
              delay: '0'
              history: 7d
              trends: '0'
              value_type: CHAR
              description: 'Name of the server instance that is hosting the current primary replica.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.group_name==''{#GROUP_NAME}'')].primary_replica.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 3h
              master_item:
                key: 'db.odbc.get[{#GROUP_NAME}_replica_states,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: component
                  value: availability-group
            -
              uuid: 44e279e0c0ea403691dd839f63b2d095
              name: 'MSSQL AG ''{#GROUP_NAME}'': Secondary replica recovery health'
              type: DEPENDENT
              key: 'mssql.secondary_recovery_health["{#GROUP_NAME}"]'
              delay: '0'
              history: 7d
              description: |
                Indicates the recovery health of a secondary replica:
                0 = In progress
                1 = Online
                2 = Unavailable
              valuemap:
                name: 'MSSQL AG Recovery health'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.group_name==''{#GROUP_NAME}'')].secondary_recovery_health.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'db.odbc.get[{#GROUP_NAME}_replica_states,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: component
                  value: availability-group
              trigger_prototypes:
                -
                  uuid: 4a8169c5875e4e0b875779a217e3e578
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.secondary_recovery_health["{#GROUP_NAME}"])=0'
                  name: 'MSSQL AG ''{#GROUP_NAME}'': Secondary replica recovery health in progress'
                  priority: WARNING
                  description: 'The secondary replica is in the synchronization process.'
                  tags:
                    -
                      tag: availability-group
                      value: '{#GROUP_NAME}'
                    -
                      tag: scope
                      value: notice
            -
              uuid: 7508d4f13b0b4aa6a22507cf8bccda0c
              name: 'MSSQL AG ''{#GROUP_NAME}'': Synchronization health'
              type: DEPENDENT
              key: 'mssql.synchronization_health["{#GROUP_NAME}"]'
              delay: '0'
              history: 7d
              description: |
                Reflects a rollup of the synchronization_health of all availability replicas in the availability group:
                0: Not healthy. None of the availability replicas have a healthy synchronization.
                1: Partially healthy. The synchronization of some, but not all, availability replicas is healthy.
                2: Healthy. The synchronization of every availability replica is healthy.
              valuemap:
                name: 'MSSQL AG Synchronization health'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.group_name==''{#GROUP_NAME}'')].synchronization_health.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'db.odbc.get[{#GROUP_NAME}_replica_states,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: component
                  value: availability-group
              trigger_prototypes:
                -
                  uuid: d694e2ce6d9d45b79716e3880f0919b5
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.synchronization_health["{#GROUP_NAME}"])=0'
                  name: 'MSSQL AG ''{#GROUP_NAME}'': All replicas unhealthy'
                  priority: DISASTER
                  description: 'None of the availability replicas have a healthy synchronization.'
                  tags:
                    -
                      tag: availability-group
                      value: '{#GROUP_NAME}'
                    -
                      tag: scope
                      value: availability
                -
                  uuid: f3ae55950bb84a7996c9c4554e3faf27
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.synchronization_health["{#GROUP_NAME}"])=1'
                  name: 'MSSQL AG ''{#GROUP_NAME}'': Some replicas unhealthy'
                  priority: HIGH
                  description: 'The synchronization health of some, but not all, availability replicas is healthy.'
                  tags:
                    -
                      tag: availability-group
                      value: '{#GROUP_NAME}'
                    -
                      tag: scope
                      value: availability
          preprocessing:
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1d
        -
          uuid: 7c0ea84a21134038bfb946216cc77912
          name: 'Database discovery'
          type: ODBC
          key: 'db.odbc.discovery[dbname,"{$MSSQL.DSN}"]'
          delay: 1h
          status: DISABLED
          params: |
            SELECT name as dbname
            FROM sys.databases
          username: '{$MSSQL.USER}'
          password: '{$MSSQL.PASSWORD}'
          filter:
            evaltype: AND
            conditions:
              -
                macro: '{#DBNAME}'
                value: '{$MSSQL.DBNAME.MATCHES}'
                formulaid: A
              -
                macro: '{#DBNAME}'
                value: '{$MSSQL.DBNAME.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
                formulaid: B
          description: 'Scanning databases in DBMS.'
          item_prototypes:
            -
              uuid: 235a75e75fee40db9a95ac795a994980
              name: 'MSSQL DB ''{#DBNAME}'': Last diff backup duration'
              type: DEPENDENT
              key: 'mssql.backup.diff.duration["{#DBNAME}"]'
              delay: '0'
              history: 7d
              units: s
              description: 'Duration of the last differential backup.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.dbname==''{#DBNAME}'' && @.type==''I'')].duration.first()'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: '0'
              master_item:
                key: 'db.odbc.get[get_last_backup,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: database
                -
                  tag: database
                  value: '{#DBNAME}'
            -
              uuid: ab6d7ded2b6e4b4eaa167f9ac2498d33
              name: 'MSSQL DB ''{#DBNAME}'': Last diff backup (time ago)'
              type: DEPENDENT
              key: 'mssql.backup.diff["{#DBNAME}"]'
              delay: '0'
              history: 7d
              units: s
              description: 'The amount of time since the last differential backup.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.dbname==''{#DBNAME}'' && @.type==''I'')].timesincelastbackup.first()'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: '0'
              master_item:
                key: 'db.odbc.get[get_last_backup,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: database
                -
                  tag: database
                  value: '{#DBNAME}'
              trigger_prototypes:
                -
                  uuid: e8a31c928a66486880f2b0fd8f87c654
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.backup.diff["{#DBNAME}"])>{$MSSQL.BACKUP_DIFF.CRIT:"{#DBNAME}"}'
                  name: 'MSSQL DB ''{#DBNAME}'': Diff backup is old'
                  event_name: 'MSSQL DB ''{#DBNAME}'': Diff backup older than {$MSSQL.BACKUP_DIFF.CRIT:"{#DBNAME}"}'
                  opdata: 'Time since last backup: {ITEM.LASTVALUE1}'
                  priority: HIGH
                  description: 'The differential backup has not been executed for a long time.'
                  tags:
                    -
                      tag: database
                      value: '{#DBNAME}'
                    -
                      tag: scope
                      value: availability
                -
                  uuid: 6124ff6a2c9e40eaabd291a617a731c1
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.backup.diff["{#DBNAME}"])>{$MSSQL.BACKUP_DIFF.WARN:"{#DBNAME}"}'
                  name: 'MSSQL DB ''{#DBNAME}'': Diff backup is old'
                  event_name: 'MSSQL DB ''{#DBNAME}'': Diff backup older than {$MSSQL.BACKUP_DIFF.WARN:"{#DBNAME}"}'
                  opdata: 'Time since last backup: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  description: 'The differential backup has not been executed for a long time.'
                  dependencies:
                    -
                      name: 'MSSQL DB ''{#DBNAME}'': Diff backup is old'
                      expression: 'last(/Template MSSQL by ODBC Proxy/mssql.backup.diff["{#DBNAME}"])>{$MSSQL.BACKUP_DIFF.CRIT:"{#DBNAME}"}'
                  tags:
                    -
                      tag: database
                      value: '{#DBNAME}'
                    -
                      tag: scope
                      value: availability
            -
              uuid: 0a63005107284e28a9ef490e6f96aaab
              name: 'MSSQL DB ''{#DBNAME}'': Last full backup duration'
              type: DEPENDENT
              key: 'mssql.backup.full.duration["{#DBNAME}"]'
              delay: '0'
              history: 7d
              units: s
              description: 'Duration of the last full backup.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.dbname==''{#DBNAME}'' && @.type==''D'')].duration.first()'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: '0'
              master_item:
                key: 'db.odbc.get[get_last_backup,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: database
                -
                  tag: database
                  value: '{#DBNAME}'
            -
              uuid: 39b3248a589b44bbb942152a45934e82
              name: 'MSSQL DB ''{#DBNAME}'': Last full backup (time ago)'
              type: DEPENDENT
              key: 'mssql.backup.full["{#DBNAME}"]'
              delay: '0'
              history: 7d
              units: s
              description: 'The amount of time since the last full backup.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.dbname==''{#DBNAME}'' && @.type==''D'')].timesincelastbackup.first()'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: '0'
              master_item:
                key: 'db.odbc.get[get_last_backup,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: database
                -
                  tag: database
                  value: '{#DBNAME}'
              trigger_prototypes:
                -
                  uuid: 520e20f8e9504b1b990971d8fe91e8d0
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.backup.full["{#DBNAME}"])>{$MSSQL.BACKUP_FULL.CRIT:"{#DBNAME}"}'
                  name: 'MSSQL DB ''{#DBNAME}'': Full backup is old'
                  event_name: 'MSSQL DB ''{#DBNAME}'': Full backup older than {$MSSQL.BACKUP_FULL.CRIT:"{#DBNAME}"}'
                  opdata: 'Time since last backup: {ITEM.LASTVALUE1}'
                  priority: HIGH
                  description: 'The full backup has not been executed for a long time.'
                  tags:
                    -
                      tag: database
                      value: '{#DBNAME}'
                    -
                      tag: scope
                      value: availability
                -
                  uuid: f6b7c8633cd64ce5b934054ca5f48c80
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.backup.full["{#DBNAME}"])>{$MSSQL.BACKUP_FULL.WARN:"{#DBNAME}"}'
                  name: 'MSSQL DB ''{#DBNAME}'': Full backup is old'
                  event_name: 'MSSQL DB ''{#DBNAME}'': Full backup older than {$MSSQL.BACKUP_FULL.WARN:"{#DBNAME}"}'
                  opdata: 'Time since last backup: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  description: 'The full backup has not been executed for a long time.'
                  dependencies:
                    -
                      name: 'MSSQL DB ''{#DBNAME}'': Full backup is old'
                      expression: 'last(/Template MSSQL by ODBC Proxy/mssql.backup.full["{#DBNAME}"])>{$MSSQL.BACKUP_FULL.CRIT:"{#DBNAME}"}'
                  tags:
                    -
                      tag: scope
                      value: availability
            -
              uuid: 6a29523194864652a380416d31d977ec
              name: 'MSSQL DB ''{#DBNAME}'': Last log backup duration'
              type: DEPENDENT
              key: 'mssql.backup.log.duration["{#DBNAME}"]'
              delay: '0'
              history: 7d
              units: s
              description: 'Duration of the last log backup.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.dbname==''{#DBNAME}'' && @.type==''L'')].duration.first()'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: '0'
              master_item:
                key: 'db.odbc.get[get_last_backup,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: database
                -
                  tag: database
                  value: '{#DBNAME}'
            -
              uuid: 38e2f07278214565ac99778303d4d977
              name: 'MSSQL DB ''{#DBNAME}'': Last log backup'
              type: DEPENDENT
              key: 'mssql.backup.log["{#DBNAME}"]'
              delay: '0'
              history: 7d
              units: s
              description: 'The amount of time since the last log backup.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.dbname==''{#DBNAME}'' && @.type==''L'')].timesincelastbackup.first()'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: '0'
              master_item:
                key: 'db.odbc.get[get_last_backup,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: database
                -
                  tag: database
                  value: '{#DBNAME}'
              trigger_prototypes:
                -
                  uuid: 7969b45d2d584a429458e9c75c32ba67
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.backup.log["{#DBNAME}"])>{$MSSQL.BACKUP_LOG.CRIT:"{#DBNAME}"}'
                  name: 'MSSQL DB ''{#DBNAME}'': Log backup is old'
                  event_name: 'MSSQL DB ''{#DBNAME}'': Log backup older than {$MSSQL.BACKUP_LOG.CRIT:"{#DBNAME}"}'
                  opdata: 'Time since last backup: {ITEM.LASTVALUE1}'
                  priority: HIGH
                  description: 'The log backup has not been executed for a long time.'
                  tags:
                    -
                      tag: database
                      value: '{#DBNAME}'
                    -
                      tag: scope
                      value: availability
                -
                  uuid: 2e060a3585cb484089b9bdc32669efc7
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.backup.log["{#DBNAME}"])>{$MSSQL.BACKUP_LOG.WARN:"{#DBNAME}"}'
                  name: 'MSSQL DB ''{#DBNAME}'': Log backup is old'
                  event_name: 'MSSQL DB ''{#DBNAME}'': Log backup older than {$MSSQL.BACKUP_LOG.WARN:"{#DBNAME}"}'
                  opdata: 'Time since last backup: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  description: 'The log backup has not been executed for a long time.'
                  dependencies:
                    -
                      name: 'MSSQL DB ''{#DBNAME}'': Log backup is old'
                      expression: 'last(/Template MSSQL by ODBC Proxy/mssql.backup.log["{#DBNAME}"])>{$MSSQL.BACKUP_LOG.CRIT:"{#DBNAME}"}'
                  tags:
                    -
                      tag: database
                      value: '{#DBNAME}'
                    -
                      tag: scope
                      value: availability
            -
              uuid: 3443be99332c4410ab5788231f099696
              name: 'MSSQL DB ''{#DBNAME}'': Active transactions'
              type: DEPENDENT
              key: 'mssql.db.active_transactions["{#DBNAME}"]'
              delay: '0'
              history: 7d
              description: 'Number of active transactions for the database.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Databases'' && @.counter_name==''Active Transactions'' && @.instance_name==''{#DBNAME}'')].cntr_value.first()'
              master_item:
                key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: database
                -
                  tag: database
                  value: '{#DBNAME}'
            -
              uuid: e95618140a59436b8b893fabed912859
              name: 'MSSQL DB ''{#DBNAME}'': Data file size'
              type: DEPENDENT
              key: 'mssql.db.data_files_size["{#DBNAME}"]'
              delay: '0'
              history: 7d
              units: B
              description: 'Cumulative size of all the data files in the database including any automatic growth. Monitoring this counter is useful, for example, for determining the correct size of tempdb.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Databases'' && @.counter_name==''Data File(s) Size (KB)'' && @.instance_name==''{#DBNAME}'')].cntr_value.first()'
                -
                  type: MULTIPLIER
                  parameters:
                    - '1024'
              master_item:
                key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: database
                -
                  tag: database
                  value: '{#DBNAME}'
            -
              uuid: 85faa1f46190490688a881ce80f2d2f9
              name: 'MSSQL DB ''{#DBNAME}'': Log bytes flushed per second'
              type: DEPENDENT
              key: 'mssql.db.log_bytes_flushed_sec.rate["{#DBNAME}"]'
              delay: '0'
              history: 7d
              status: DISABLED
              discover: NO_DISCOVER
              value_type: FLOAT
              units: Bps
              description: 'Total number of log bytes flushed per second. Useful for determining trends and utilization of the transaction log.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Databases'' && @.counter_name==''Log Bytes Flushed/sec'' && @.instance_name==''{#DBNAME}'')].cntr_value.first()'
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
              master_item:
                key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: database
                -
                  tag: database
                  value: '{#DBNAME}'
            -
              uuid: ec6e4e8d39c243ad81f46c69ebb3abae
              name: 'MSSQL DB ''{#DBNAME}'': Log file size'
              type: DEPENDENT
              key: 'mssql.db.log_files_size["{#DBNAME}"]'
              delay: '0'
              history: 7d
              status: DISABLED
              discover: NO_DISCOVER
              units: B
              description: 'Cumulative size of all the transaction log files in the database.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Databases'' && @.counter_name==''Log File(s) Size (KB)'' && @.instance_name==''{#DBNAME}'')].cntr_value.first()'
                -
                  type: MULTIPLIER
                  parameters:
                    - '1024'
              master_item:
                key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: database
                -
                  tag: database
                  value: '{#DBNAME}'
            -
              uuid: b6324cc480b940a29019d51440084eca
              name: 'MSSQL DB ''{#DBNAME}'': Log file used size'
              type: DEPENDENT
              key: 'mssql.db.log_files_used_size["{#DBNAME}"]'
              delay: '0'
              history: 7d
              status: DISABLED
              discover: NO_DISCOVER
              units: B
              description: 'Cumulative used size of all the log files in the database.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Databases'' && @.counter_name==''Log File(s) Used Size (KB)'' && @.instance_name==''{#DBNAME}'')].cntr_value.first()'
                -
                  type: MULTIPLIER
                  parameters:
                    - '1024'
              master_item:
                key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: database
                -
                  tag: database
                  value: '{#DBNAME}'
            -
              uuid: f45dadab71094ac0bb52b222eeed85db
              name: 'MSSQL DB ''{#DBNAME}'': Log flushes per second'
              type: DEPENDENT
              key: 'mssql.db.log_flushes_sec.rate["{#DBNAME}"]'
              delay: '0'
              history: 7d
              status: DISABLED
              discover: NO_DISCOVER
              value_type: FLOAT
              description: 'Number of log flushes per second.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Databases'' && @.counter_name==''Log Flushes/sec'' && @.instance_name==''{#DBNAME}'')].cntr_value.first()'
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
              master_item:
                key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: database
                -
                  tag: database
                  value: '{#DBNAME}'
            -
              uuid: 07b4eb5d80e946a3a8626b0125ab6e34
              name: 'MSSQL DB ''{#DBNAME}'': Log flush waits per second'
              type: DEPENDENT
              key: 'mssql.db.log_flush_waits_sec.rate["{#DBNAME}"]'
              delay: '0'
              history: 7d
              status: DISABLED
              discover: NO_DISCOVER
              value_type: FLOAT
              description: 'Number of commits per second waiting for the log flush.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Databases'' && @.counter_name==''Log Flush Waits/sec'' && @.instance_name==''{#DBNAME}'')].cntr_value.first()'
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
              master_item:
                key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: database
                -
                  tag: database
                  value: '{#DBNAME}'
              trigger_prototypes:
                -
                  uuid: be42ecd80a1f4c88a6e7e812e331d80d
                  expression: 'min(/Template MSSQL by ODBC Proxy/mssql.db.log_flush_waits_sec.rate["{#DBNAME}"],5m)>{$MSSQL.LOG_FLUSH_WAITS.MAX:"{#DBNAME}"}'
                  name: 'MSSQL DB ''{#DBNAME}'': Number of commits waiting for the log flush is high'
                  event_name: 'MSSQL DB ''{#DBNAME}'': Number of commits waiting for the log flush is high (over {$MSSQL.LOG_FLUSH_WAITS.MAX:"{#DBNAME}"}/sec for 5m)'
                  status: DISABLED
                  priority: WARNING
                  description: 'Too many commits are waiting for the log flush.'
                  tags:
                    -
                      tag: database
                      value: '{#DBNAME}'
                    -
                      tag: scope
                      value: performance
            -
              uuid: 1f8a8ec433a54f5c8e3e0b0c108ced7a
              name: 'MSSQL DB ''{#DBNAME}'': Log flush wait time'
              type: DEPENDENT
              key: 'mssql.db.log_flush_wait_time["{#DBNAME}"]'
              delay: '0'
              history: 7d
              status: DISABLED
              discover: NO_DISCOVER
              value_type: FLOAT
              units: ms
              description: 'Total wait time (in milliseconds) to flush the log. On an AlwaysOn secondary database, this value indicates the wait time for log records to be hardened to disk.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Databases'' && @.counter_name==''Log Flush Wait Time'' && @.instance_name==''{#DBNAME}'')].cntr_value.first()'
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
              master_item:
                key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: database
                -
                  tag: database
                  value: '{#DBNAME}'
              trigger_prototypes:
                -
                  uuid: 568d26d5ef244beaba5ae88ebbbaefbe
                  expression: 'min(/Template MSSQL by ODBC Proxy/mssql.db.log_flush_wait_time["{#DBNAME}"],5m)>{$MSSQL.LOG_FLUSH_WAIT_TIME.MAX:"{#DBNAME}"}'
                  name: 'MSSQL DB ''{#DBNAME}'': Total wait time to flush the log is high'
                  event_name: 'MSSQL DB ''{#DBNAME}'': Total wait time to flush the log is high (over {$MSSQL.LOG_FLUSH_WAIT_TIME.MAX:"{#DBNAME}"}ms for 5m)'
                  status: DISABLED
                  priority: WARNING
                  description: 'The wait time to flush the log is too long.'
                  tags:
                    -
                      tag: database
                      value: '{#DBNAME}'
                    -
                      tag: scope
                      value: performance
            -
              uuid: f69b3972c63144c89e82f278397bc4fc
              name: 'MSSQL DB ''{#DBNAME}'': Log growths'
              type: DEPENDENT
              key: 'mssql.db.log_growths["{#DBNAME}"]'
              delay: '0'
              history: 7d
              status: DISABLED
              discover: NO_DISCOVER
              description: 'Total number of times the transaction log for the database has been expanded.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Databases'' && @.counter_name==''Log Growths'' && @.instance_name==''{#DBNAME}'')].cntr_value.first()'
              master_item:
                key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: database
                -
                  tag: database
                  value: '{#DBNAME}'
            -
              uuid: 0b390e660ea24ebbbe847d9ae5c9ede3
              name: 'MSSQL DB ''{#DBNAME}'': Log shrinks'
              type: DEPENDENT
              key: 'mssql.db.log_shrinks["{#DBNAME}"]'
              delay: '0'
              history: 7d
              status: DISABLED
              discover: NO_DISCOVER
              description: 'Total number of times the transaction log for the database has been shrunk.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Databases'' && @.counter_name==''Log Shrinks'' && @.instance_name==''{#DBNAME}'')].cntr_value.first()'
              master_item:
                key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: database
                -
                  tag: database
                  value: '{#DBNAME}'
            -
              uuid: b80fe524063b44ac994d6b94fc8490f6
              name: 'MSSQL DB ''{#DBNAME}'': Log truncations'
              type: DEPENDENT
              key: 'mssql.db.log_truncations["{#DBNAME}"]'
              delay: '0'
              history: 7d
              status: DISABLED
              discover: NO_DISCOVER
              description: 'Number of times the transaction log has been shrunk.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Databases'' && @.counter_name==''Log Truncations'' && @.instance_name==''{#DBNAME}'')].cntr_value.first()'
              master_item:
                key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: database
                -
                  tag: database
                  value: '{#DBNAME}'
            -
              uuid: bc78039e5ba94a7bac3bca5c85716f9e
              name: 'MSSQL DB ''{#DBNAME}'': Percent log used'
              type: DEPENDENT
              key: 'mssql.db.percent_log_used["{#DBNAME}"]'
              delay: '0'
              history: 7d
              status: DISABLED
              discover: NO_DISCOVER
              value_type: FLOAT
              units: '%'
              description: 'Percentage of space in the log that is in use.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Databases'' && @.counter_name==''Percent Log Used'' && @.instance_name==''{#DBNAME}'')].cntr_value.first()'
              master_item:
                key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: database
                -
                  tag: database
                  value: '{#DBNAME}'
              trigger_prototypes:
                -
                  uuid: cf74152a1bf54de19de983d02569b8fc
                  expression: 'min(/Template MSSQL by ODBC Proxy/mssql.db.percent_log_used["{#DBNAME}"],5m)>{$MSSQL.PERCENT_LOG_USED.MAX:"{#DBNAME}"}'
                  name: 'MSSQL DB ''{#DBNAME}'': Percent of log using is high'
                  event_name: 'MSSQL DB ''{#DBNAME}'': Percent of log using is high (over {$MSSQL.PERCENT_LOG_USED.MAX:"{#DBNAME}"}% for 5m)'
                  status: DISABLED
                  priority: WARNING
                  description: 'There''s not enough space left in the log.'
                  tags:
                    -
                      tag: database
                      value: '{#DBNAME}'
                    -
                      tag: scope
                      value: performance
            -
              uuid: 0f03524ae46e4c428c2f7d9f6297ff2e
              name: 'MSSQL DB ''{#DBNAME}'': State'
              type: DEPENDENT
              key: 'mssql.db.state["{#DBNAME}"]'
              delay: '0'
              history: 7d
              description: |
                0 = ONLINE
                1 = RESTORING
                2 = RECOVERING | SQL Server 2008 and later
                3 = RECOVERY_PENDING | SQL Server 2008 and later
                4 = SUSPECT
                5 = EMERGENCY | SQL Server 2008 and later
                6 = OFFLINE | SQL Server 2008 and later
                7 = COPYING | Azure SQL Database Active Geo-Replication
                10 = OFFLINE_SECONDARY | Azure SQL Database Active Geo-Replication
              valuemap:
                name: 'MSSQL DB state'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Databases'' && @.counter_name==''State'' && @.instance_name==''{#DBNAME}'')].cntr_value.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 15m
              master_item:
                key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: database
                -
                  tag: database
                  value: '{#DBNAME}'
              trigger_prototypes:
                -
                  uuid: afc207f6792744dfbe2bde84907f3cf1
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.db.state["{#DBNAME}"])>1'
                  name: 'MSSQL DB ''{#DBNAME}'': State is {ITEM.VALUE}'
                  priority: HIGH
                  description: 'The DB has a non-working state.'
                  tags:
                    -
                      tag: database
                      value: '{#DBNAME}'
                    -
                      tag: scope
                      value: availability
            -
              uuid: 03166692ecee45fbbd964cec71635cf9
              name: 'MSSQL DB ''{#DBNAME}'': Transactions per second'
              type: DEPENDENT
              key: 'mssql.db.transactions_sec.rate["{#DBNAME}"]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'Number of transactions started for the database per second.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.object_name==''{$MSSQL.INSTANCE}:Databases'' && @.counter_name==''Transactions/sec'' && @.instance_name==''{#DBNAME}'')].cntr_value.first()'
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
              master_item:
                key: 'db.odbc.get[get_status_variables,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: database
                -
                  tag: database
                  value: '{#DBNAME}'
          graph_prototypes:
            -
              uuid: 1800c6ce7ea4400fa738173b690efc4e
              name: 'MSSQL DB ''{#DBNAME}'': Log size'
              graph_items:
                -
                  color: 1A7C11
                  item:
                    host: 'Template MSSQL by ODBC Proxy'
                    key: 'mssql.db.log_files_size["{#DBNAME}"]'
                -
                  sortorder: '1'
                  color: 2774A4
                  item:
                    host: 'Template MSSQL by ODBC Proxy'
                    key: 'mssql.db.log_files_used_size["{#DBNAME}"]'
            -
              uuid: 1b4b61fbf39b48cb86476e6845b66502
              name: 'MSSQL DB ''{#DBNAME}'': Number of Log changes'
              graph_items:
                -
                  color: 1A7C11
                  item:
                    host: 'Template MSSQL by ODBC Proxy'
                    key: 'mssql.db.log_growths["{#DBNAME}"]'
                -
                  sortorder: '1'
                  color: 2774A4
                  item:
                    host: 'Template MSSQL by ODBC Proxy'
                    key: 'mssql.db.log_shrinks["{#DBNAME}"]'
                -
                  sortorder: '2'
                  color: F63100
                  item:
                    host: 'Template MSSQL by ODBC Proxy'
                    key: 'mssql.db.log_truncations["{#DBNAME}"]'
            -
              uuid: 7694db7c35b244d9ae42a41795473e4a
              name: 'MSSQL DB ''{#DBNAME}'': Size'
              graph_items:
                -
                  color: 1A7C11
                  item:
                    host: 'Template MSSQL by ODBC Proxy'
                    key: 'mssql.db.data_files_size["{#DBNAME}"]'
          preprocessing:
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1d
        -
          uuid: 21eec9cf3e4b4682b67d5ec0bce450d5
          name: 'Job discovery'
          type: ODBC
          key: 'db.odbc.discovery[jobname,"{$MSSQL.DSN}"]'
          delay: 1h
          status: DISABLED
          params: 'SELECT name AS jobname FROM msdb..sysjobs WHERE enabled = 1'
          username: '{$MSSQL.USER}'
          password: '{$MSSQL.PASSWORD}'
          filter:
            evaltype: AND
            conditions:
              -
                macro: '{#JOBNAME}'
                value: '{$MSSQL.JOB.MATCHES}'
                formulaid: A
              -
                macro: '{#JOBNAME}'
                value: '{$MSSQL.JOB.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
                formulaid: B
          description: 'Scanning jobs in DBMS.'
          item_prototypes:
            -
              uuid: 5d0b6a6ad96f48d1a2ce79c19426b49c
              name: 'MSSQL Job ''{#JOBNAME}'': Last run date-time'
              type: DEPENDENT
              key: 'mssql.job.lastrundatetime["{#JOBNAME}"]'
              delay: '0'
              history: 7d
              trends: '0'
              value_type: TEXT
              description: 'The last date-time of the job run.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.JobName==''{#JOBNAME}'')].LastRunDateTime.first()'
                  error_handler: DISCARD_VALUE
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1d
              master_item:
                key: 'db.odbc.get[get_job_status,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: mssql-job
                -
                  tag: mssql-job
                  value: '{#JOBNAME}'
            -
              uuid: 45c1a5b08b964de481d6614d379782db
              name: 'MSSQL Job ''{#JOBNAME}'': Last run status message'
              type: DEPENDENT
              key: 'mssql.job.lastrunstatusmessage["{#JOBNAME}"]'
              delay: '0'
              history: 7d
              trends: '0'
              value_type: TEXT
              description: 'The informational message about the last run of the job.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.JobName==''{#JOBNAME}'')].LastRunStatusMessage.first()'
                  error_handler: DISCARD_VALUE
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 15m
              master_item:
                key: 'db.odbc.get[get_job_status,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: mssql-job
                -
                  tag: mssql-job
                  value: '{#JOBNAME}'
            -
              uuid: fe6abc1537734fa49b6620f5c7855b0d
              name: 'MSSQL Job ''{#JOBNAME}'': Next run date-time'
              type: DEPENDENT
              key: 'mssql.job.nextrundatetime["{#JOBNAME}"]'
              delay: '0'
              history: 7d
              trends: '0'
              value_type: TEXT
              description: 'The next date-time of the job run.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.JobName==''{#JOBNAME}'')].NextRunDateTime.first()'
                  error_handler: DISCARD_VALUE
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 15m
              master_item:
                key: 'db.odbc.get[get_job_status,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: mssql-job
                -
                  tag: mssql-job
                  value: '{#JOBNAME}'
            -
              uuid: 979555cb14364bc59eab2ab3146875eb
              name: 'MSSQL Job ''{#JOBNAME}'': Run status'
              type: DEPENDENT
              key: 'mssql.job.runstatus["{#JOBNAME}"]'
              delay: '0'
              history: 7d
              description: |
                The job status possible values:
                0 ⇒ Failed
                1 ⇒ Succeeded
                2 ⇒ Retry
                3 ⇒ Canceled
                4 ⇒ Running
              valuemap:
                name: 'MSSQL Job Run Status'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.JobName==''{#JOBNAME}'')].RunStatus.first()'
                  error_handler: DISCARD_VALUE
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 15m
              master_item:
                key: 'db.odbc.get[get_job_status,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: mssql-job
                -
                  tag: mssql-job
                  value: '{#JOBNAME}'
              trigger_prototypes:
                -
                  uuid: 5eead8dcbf7346a9a7ffea8b31a5ea56
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.job.runstatus["{#JOBNAME}"])=0'
                  name: 'MSSQL Job ''{#JOBNAME}'': Failed to run'
                  priority: WARNING
                  description: 'The last run of the job has failed.'
                  tags:
                    -
                      tag: mssql-job
                      value: '{#JOBNAME}'
                    -
                      tag: scope
                      value: performance
            -
              uuid: cd4da256bb124998835421c55d51a2e4
              name: 'MSSQL Job ''{#JOBNAME}'': Run duration'
              type: DEPENDENT
              key: 'mssql.job.run_duration["{#JOBNAME}"]'
              delay: '0'
              history: 7d
              units: s
              description: 'Duration of the last run job.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.JobName==''{#JOBNAME}'')].RunDuration.first()'
                  error_handler: DISCARD_VALUE
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 15m
              master_item:
                key: 'db.odbc.get[get_job_status,"{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: mssql-job
                -
                  tag: mssql-job
                  value: '{#JOBNAME}'
              trigger_prototypes:
                -
                  uuid: fb4ed2b14e5f49b5a23b449d4e69db3a
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.job.run_duration["{#JOBNAME}"])>{$MSSQL.BACKUP_DURATION.WARN:"{#JOBNAME}"}'
                  name: 'MSSQL Job ''{#JOBNAME}'': Job duration is high'
                  event_name: 'MSSQL Job ''{#JOBNAME}'': Job duration is greater than {$MSSQL.BACKUP_DURATION.WARN:"{#JOBNAME}"}'
                  opdata: 'Job duration: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  description: 'The job is taking too long.'
                  tags:
                    -
                      tag: mssql-job
                      value: '{#JOBNAME}'
                    -
                      tag: scope
                      value: performance
          preprocessing:
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1d
        -
          uuid: 87e17b74a4dc44cda76e1ed8bce64121
          name: 'Local database discovery'
          type: ODBC
          key: 'db.odbc.discovery[local_db,"{$MSSQL.DSN}"]'
          delay: 1h
          status: DISABLED
          params: |
            SELECT ag.name AS group_name, arcs.replica_server_name AS replica_name,
            db_name(drs.database_id) AS dbname, drs.is_local
            FROM sys.dm_hadr_database_replica_states drs JOIN sys.dm_hadr_availability_replica_cluster_states arcs
            ON arcs.replica_id = drs.replica_id
            JOIN sys.availability_groups ag ON ag.group_id = arcs.group_id
            JOIN sys.dm_hadr_availability_replica_states ars ON ars.replica_id = arcs.replica_id
            WHERE drs.is_local = 1
          username: '{$MSSQL.USER}'
          password: '{$MSSQL.PASSWORD}'
          description: 'Discovery of the local availability databases.'
          item_prototypes:
            -
              uuid: 91b103d3fabc49e7803c1b29b3b81083
              name: 'MSSQL AG ''{#GROUP_NAME}'' Local DB ''{#DBNAME}'': Get local DB states'
              type: ODBC
              key: 'db.odbc.get["{#GROUP_NAME}_{#DBNAME}_local_db.states","{$MSSQL.DSN}"]'
              history: 0h
              trends: '0'
              value_type: TEXT
              params: |
                SELECT drs.database_state as database_state, 
                drs.is_suspended as is_suspended, 
                drs.synchronization_health as synchronization_health, 
                ag.name as group_name,
                arcs.replica_server_name as replica_name,
                db_name(drs.database_id) as dbname
                FROM sys.dm_hadr_database_replica_states drs 
                JOIN sys.dm_hadr_availability_replica_cluster_states arcs ON arcs.replica_id = drs.replica_id 
                JOIN sys.availability_groups ag ON ag.group_id = arcs.group_id 
                JOIN sys.dm_hadr_availability_replica_states ars ON ars.replica_id = arcs.replica_id
              username: '{$MSSQL.USER}'
              password: '{$MSSQL.PASSWORD}'
              description: 'Getting the states of the local availability database.'
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: component
                  value: raw
                -
                  tag: local-db
                  value: '{#DBNAME}'
            -
              uuid: 13d9f70e694f48a08cc4139fc396b004
              name: 'MSSQL AG ''{#GROUP_NAME}'' Local DB ''{#DBNAME}'': Suspended'
              type: DEPENDENT
              key: 'mssql.local_db.is_suspended["{#DBNAME}"]'
              delay: '0'
              history: 7d
              description: |
                Database state:
                0 = Resumed
                1 = Suspended
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.group_name==''{#GROUP_NAME}'' && @.replica_name==''{#REPLICA_NAME}'' && @.dbname==''{#DBNAME}'')].is_suspended.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'db.odbc.get["{#GROUP_NAME}_{#DBNAME}_local_db.states","{$MSSQL.DSN}"]'
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: component
                  value: local-db
                -
                  tag: local-db
                  value: '{#DBNAME}'
            -
              uuid: 649b9ee09c4a47bab0f7a4a81a457389
              name: 'MSSQL AG ''{#GROUP_NAME}'' Local DB ''{#DBNAME}'': State'
              type: DEPENDENT
              key: 'mssql.local_db.state["{#DBNAME}"]'
              delay: '0'
              history: 7d
              description: |
                0 = Online
                1 = Restoring
                2 = Recovering
                3 = Recovery pending
                4 = Suspect
                5 = Emergency
                6 = Offline
              valuemap:
                name: 'MSSQL DB state'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.group_name==''{#GROUP_NAME}'' && @.replica_name==''{#REPLICA_NAME}'' && @.dbname==''{#DBNAME}'')].database_state.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'db.odbc.get["{#GROUP_NAME}_{#DBNAME}_local_db.states","{$MSSQL.DSN}"]'
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: component
                  value: local-db
                -
                  tag: local-db
                  value: '{#DBNAME}'
              trigger_prototypes:
                -
                  uuid: d181d513daef43b3ba7d3deb0ee036ed
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.local_db.state["{#DBNAME}"])>0'
                  name: 'MSSQL AG ''{#GROUP_NAME}'' Local DB ''{#DBNAME}'': "{#DBNAME}" is {ITEM.VALUE}'
                  priority: WARNING
                  description: 'The local availability database has a non-working state.'
                  tags:
                    -
                      tag: availability-group
                      value: '{#GROUP_NAME}'
                    -
                      tag: local-db
                      value: '{#DBNAME}'
                    -
                      tag: scope
                      value: availability
            -
              uuid: fe619da1dc1148fd9b503c194d427c01
              name: 'MSSQL AG ''{#GROUP_NAME}'' Local DB ''{#DBNAME}'': Synchronization health'
              type: DEPENDENT
              key: 'mssql.local_db.synchronization_health["{#DBNAME}"]'
              delay: '0'
              history: 7d
              description: |
                Reflects the intersection of the synchronization state of a database that is joined to the availability group on the availability replica and the availability mode of the availability replica (synchronous-commit or asynchronous-commit mode):
                0 = Not healthy. The synchronization_state of the database is 0 (NOT SYNCHRONIZING).
                1 = Partially healthy. A database on a synchronous-commit availability replica is considered 
                partially healthy if synchronization_state is 1 (SYNCHRONIZING).
                2 = Healthy. A database on an synchronous-commit availability replica is considered healthy if synchronization_state is 2 (SYNCHRONIZED), and a database on an asynchronous-commit availability replica is considered healthy if synchronization_state is 1 (SYNCHRONIZING).
              valuemap:
                name: 'MSSQL AG Synchronization health'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.group_name==''{#GROUP_NAME}'' && @.replica_name==''{#REPLICA_NAME}'' && @.dbname==''{#DBNAME}'')].synchronization_health.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'db.odbc.get["{#GROUP_NAME}_{#DBNAME}_local_db.states","{$MSSQL.DSN}"]'
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: component
                  value: local-db
                -
                  tag: local-db
                  value: '{#DBNAME}'
              trigger_prototypes:
                -
                  uuid: c28a0392119b47bc81bbabfc632bf501
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.local_db.synchronization_health["{#DBNAME}"])=0'
                  name: 'MSSQL AG ''{#GROUP_NAME}'' Local DB ''{#DBNAME}'': "{#DBNAME}" is Not healthy'
                  priority: HIGH
                  description: 'The synchronization state of the local availability database is NOT SYNCHRONIZING.'
                  tags:
                    -
                      tag: availability-group
                      value: '{#GROUP_NAME}'
                    -
                      tag: local-db
                      value: '{#DBNAME}'
                    -
                      tag: scope
                      value: availability
                -
                  uuid: 95aaf00ad2304c178c51472622991e0b
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.local_db.synchronization_health["{#DBNAME}"])=1'
                  name: 'MSSQL AG ''{#GROUP_NAME}'' Local DB ''{#DBNAME}'': "{#DBNAME}" is Partially healthy'
                  priority: AVERAGE
                  description: 'A database on a synchronous-commit availability replica is considered partially healthy if synchronization state is SYNCHRONIZING.'
                  tags:
                    -
                      tag: availability-group
                      value: '{#GROUP_NAME}'
                    -
                      tag: local-db
                      value: '{#DBNAME}'
                    -
                      tag: scope
                      value: availability
          preprocessing:
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1d
        -
          uuid: 0a536939e2ff423aa5b896bd771c0fda
          name: 'Mirroring discovery'
          type: ODBC
          key: 'db.odbc.discovery[mirrors,"{$MSSQL.DSN}"]'
          delay: 1h
          status: DISABLED
          params: |
            SELECT db_name(database_id) as dbname
            FROM sys.database_mirroring
            WHERE mirroring_state_desc IS NOT NULL
          username: '{$MSSQL.USER}'
          password: '{$MSSQL.PASSWORD}'
          description: |
            To see the row for a database other than master or tempdb, you must
            either be the database owner or have at least ALTER ANY DATABASE or VIEW ANY
            DATABASE server-level permission or CREATE DATABASE permission in the master
            database. To see non-NULL values on a mirror database, you must be a member
            of the sysadmin fixed server role.
          item_prototypes:
            -
              uuid: b6337129f46a470faeae03c95d3c1e02
              name: 'MSSQL Mirroring ''{#DBNAME}'': Get the mirror state'
              type: ODBC
              key: 'db.odbc.get["{#DBNAME}_mirroring_state","{$MSSQL.DSN}"]'
              history: 0h
              trends: '0'
              value_type: TEXT
              params: |
                SELECT ISNULL(m.mirroring_role,0) as mirroring_role,
                ISNULL(m.mirroring_role_sequence,0) as mirroring_role_sequence,
                ISNULL(m.mirroring_state,7) as mirroring_state,
                ISNULL(m.mirroring_witness_state,3) as mirroring_witness_state,
                ISNULL(m.mirroring_safety_level,3) as mirroring_safety_level,
                db_name(m.database_id) as dbname 
                FROM sys.database_mirroring as m
                WHERE m.mirroring_state_desc IS NOT NULL
              username: '{$MSSQL.USER}'
              password: '{$MSSQL.PASSWORD}'
              description: 'Getting mirrors state'
              tags:
                -
                  tag: component
                  value: mssql-mirroring
                -
                  tag: mssql-mirroring
                  value: '{#DBNAME}'
            -
              uuid: dea0cfdcde5240f3943f45625f78e239
              name: 'MSSQL Mirroring ''{#DBNAME}'': Role'
              type: DEPENDENT
              key: 'mssql.mirroring.role["{#DBNAME}"]'
              delay: '0'
              history: 7d
              description: |
                Current role of the local database plays in the database mirroring session.
                1 = Principal
                2 = Mirror
              valuemap:
                name: 'MSSQL Mirroring Role'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.dbname==''{#DBNAME}'')].mirroring_role.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'db.odbc.get["{#DBNAME}_mirroring_state","{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: mssql-mirroring
                -
                  tag: mssql-mirroring
                  value: '{#DBNAME}'
            -
              uuid: 4c81d055683043e4937058f227f07af5
              name: 'MSSQL Mirroring ''{#DBNAME}'': Role sequence'
              type: DEPENDENT
              key: 'mssql.mirroring.role_sequence["{#DBNAME}"]'
              delay: '0'
              history: 7d
              description: 'The number of times that mirroring partners have switched the principal and mirror roles due to a failover or forced service.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.dbname==''{#DBNAME}'')].mirroring_role_sequence.first()'
                -
                  type: SIMPLE_CHANGE
                  parameters:
                    - ''
              master_item:
                key: 'db.odbc.get["{#DBNAME}_mirroring_state","{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: mssql-mirroring
                -
                  tag: mssql-mirroring
                  value: '{#DBNAME}'
            -
              uuid: f497f9907d424b3d9257e0853348053b
              name: 'MSSQL Mirroring ''{#DBNAME}'': Safety level'
              type: DEPENDENT
              key: 'mssql.mirroring.safety_level["{#DBNAME}"]'
              delay: '0'
              history: 7d
              description: |
                Safety setting for updates on the mirror database:
                0 = Unknown state
                1 = Off [asynchronous]
                2 = Full [synchronous]
              valuemap:
                name: 'MSSQL Safety level'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.dbname==''{#DBNAME}'')].mirroring_safety_level.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'db.odbc.get["{#DBNAME}_mirroring_state","{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: mssql-mirroring
                -
                  tag: mssql-mirroring
                  value: '{#DBNAME}'
            -
              uuid: 5da471483fb3443d9847cf4fd371823a
              name: 'MSSQL Mirroring ''{#DBNAME}'': State'
              type: DEPENDENT
              key: 'mssql.mirroring.state["{#DBNAME}"]'
              delay: '0'
              history: 7d
              description: |
                State of the mirror database and of the database mirroring session.
                0 = Suspended
                1 = Disconnected from the other partner
                2 = Synchronizing
                3 = Pending Failover
                4 = Synchronized
                5 = The partners are not synchronized. Failover is not possible now.
                6 = The partners are synchronized. Failover is potentially possible. For information about the requirements for the failover, see Database Mirroring Operating Modes.
              valuemap:
                name: 'MSSQL Mirroring State'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.dbname==''{#DBNAME}'')].mirroring_state.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'db.odbc.get["{#DBNAME}_mirroring_state","{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: mssql-mirroring
                -
                  tag: mssql-mirroring
                  value: '{#DBNAME}'
              trigger_prototypes:
                -
                  uuid: 2fd494d7e4f64666b0f1a5e15faf23b0
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.mirroring.state["{#DBNAME}"])=3'
                  name: 'MSSQL Mirroring ''{#DBNAME}'': "{#DBNAME}" is {ITEM.VALUE}'
                  priority: WARNING
                  description: 'The state of the mirror database and of the database mirroring session is "Pending Failover".'
                  tags:
                    -
                      tag: mssql-mirroring
                      value: '{#DBNAME}'
                    -
                      tag: scope
                      value: availability
                -
                  uuid: 55bb4cca6334437a82f6c4f5babfca6d
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.mirroring.state["{#DBNAME}"])=5'
                  name: 'MSSQL Mirroring ''{#DBNAME}'': "{#DBNAME}" is {ITEM.VALUE}'
                  priority: HIGH
                  description: 'The state of the mirror database and of the database mirroring session is "Not synchronized". The partners are not synchronized. A failover is not possible now.'
                  tags:
                    -
                      tag: mssql-mirroring
                      value: '{#DBNAME}'
                    -
                      tag: scope
                      value: availability
                -
                  uuid: 0658348385434762b9d09e2834030c0e
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.mirroring.state["{#DBNAME}"])>=0 and last(/Template MSSQL by ODBC Proxy/mssql.mirroring.state["{#DBNAME}"])<=2'
                  name: 'MSSQL Mirroring ''{#DBNAME}'': "{#DBNAME}" is {ITEM.VALUE}'
                  priority: INFO
                  description: 'The state of the mirror database and of the database mirroring session is "Suspended", "Disconnected from the other partner", or "Synchronizing".'
                  tags:
                    -
                      tag: mssql-mirroring
                      value: '{#DBNAME}'
                    -
                      tag: scope
                      value: availability
            -
              uuid: eaaede7bff794a07af8a6323416a1864
              name: 'MSSQL Mirroring ''{#DBNAME}'': Witness state'
              type: DEPENDENT
              key: 'mssql.mirroring.witness_state["{#DBNAME}"]'
              delay: '0'
              history: 7d
              description: |
                State of the witness in the database mirroring session of the database:
                0 = Unknown
                1 = Connected
                2 = Disconnected
              valuemap:
                name: 'MSSQL Witness state'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.dbname==''{#DBNAME}'')].mirroring_witness_state.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'db.odbc.get["{#DBNAME}_mirroring_state","{$MSSQL.DSN}"]'
              tags:
                -
                  tag: component
                  value: mssql-mirroring
                -
                  tag: mssql-mirroring
                  value: '{#DBNAME}'
              trigger_prototypes:
                -
                  uuid: c1de8fb5d61d4dcdbba603c91d036e8b
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.mirroring.witness_state["{#DBNAME}"])=2'
                  name: 'MSSQL Mirroring ''{#DBNAME}'': "{#DBNAME}" Witness is disconnected'
                  priority: WARNING
                  description: 'The state of the witness in the database mirroring session of the database is "Disconnected".'
                  tags:
                    -
                      tag: mssql-mirroring
                      value: '{#DBNAME}'
                    -
                      tag: scope
                      value: availability
          graph_prototypes:
            -
              uuid: f880591ba056499ead98bc18b34fd14a
              name: 'MSSQL Mirroring ''{#DBNAME}'': States'
              graph_items:
                -
                  color: 1A7C11
                  item:
                    host: 'Template MSSQL by ODBC Proxy'
                    key: 'mssql.mirroring.state["{#DBNAME}"]'
                -
                  sortorder: '1'
                  color: 2774A4
                  item:
                    host: 'Template MSSQL by ODBC Proxy'
                    key: 'mssql.mirroring.witness_state["{#DBNAME}"]'
          preprocessing:
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1d
        -
          uuid: 24507eaccdb84e2f941599071b4976aa
          name: 'Non-local database discovery'
          type: ODBC
          key: 'db.odbc.discovery[non-local_db,"{$MSSQL.DSN}"]'
          delay: 1h
          status: DISABLED
          params: |
            SELECT ag.name AS group_name, arcs.replica_server_name AS replica_name,
            db_name(drs.database_id) AS dbname, drs.is_local
            FROM sys.dm_hadr_database_replica_states drs JOIN sys.dm_hadr_availability_replica_cluster_states arcs
            ON arcs.replica_id = drs.replica_id
            JOIN sys.availability_groups ag ON ag.group_id = arcs.group_id
            JOIN sys.dm_hadr_availability_replica_states ars ON ars.replica_id = arcs.replica_id
            WHERE drs.is_local = 0
          username: '{$MSSQL.USER}'
          password: '{$MSSQL.PASSWORD}'
          description: 'Discovery of the non-local (not local to the SQL Server instance) availability databases.'
          item_prototypes:
            -
              uuid: c6d777aaa607421c8fe21c83a31b4346
              name: 'MSSQL AG ''{#GROUP_NAME}'' Non-Local DB ''*{#REPLICA_NAME}*{#DBNAME}'': Get non-local DB states'
              type: ODBC
              key: 'db.odbc.get["{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}_non-local_db.states","{$MSSQL.DSN}"]'
              history: 0h
              trends: '0'
              value_type: TEXT
              params: |
                SELECT drs.log_send_queue_size as log_send_queue_size,
                drs.redo_queue_size as redo_queue_size,
                ag.name as group_name,
                arcs.replica_server_name as replica_name,
                db_name(drs.database_id) as dbname
                FROM sys.dm_hadr_database_replica_states drs 
                JOIN sys.dm_hadr_availability_replica_cluster_states arcs ON arcs.replica_id = drs.replica_id 
                JOIN sys.availability_groups ag ON ag.group_id = arcs.group_id 
                JOIN sys.dm_hadr_availability_replica_states ars ON ars.replica_id = arcs.replica_id
              username: '{$MSSQL.USER}'
              password: '{$MSSQL.PASSWORD}'
              description: 'Getting the states of the non-local availability database.'
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: component
                  value: raw
                -
                  tag: non-local-db
                  value: '{#DBNAME}'
            -
              uuid: e13b84d2ff4a42d1b460ceb3e399acc1
              name: 'MSSQL AG ''{#GROUP_NAME}'' Non-Local DB ''*{#REPLICA_NAME}*{#DBNAME}'': Log queue size'
              type: DEPENDENT
              key: 'mssql.non-local_db.log_send_queue_size["{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}"]'
              delay: '0'
              history: 7d
              units: B
              description: 'Amount of the log records of the primary database that has not been sent to the secondary databases.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.group_name==''{#GROUP_NAME}'' && @.replica_name==''{#REPLICA_NAME}'' && @.dbname==''{#DBNAME}'')].log_send_queue_size.first()'
                -
                  type: MULTIPLIER
                  parameters:
                    - '1024'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'db.odbc.get["{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}_non-local_db.states","{$MSSQL.DSN}"]'
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: component
                  value: non-local-db
                -
                  tag: non-local-db
                  value: '{#DBNAME}'
              trigger_prototypes:
                -
                  uuid: 519f203779834b3ca8d18ce4fddce14c
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.non-local_db.log_send_queue_size["{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}"],#1)>last(/Template MSSQL by ODBC Proxy/mssql.non-local_db.log_send_queue_size["{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}"],#2) and last(/Template MSSQL by ODBC Proxy/mssql.non-local_db.log_send_queue_size["{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}"],#2)>last(/Template MSSQL by ODBC Proxy/mssql.non-local_db.log_send_queue_size["{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}"],#3)'
                  name: 'MSSQL AG ''{#GROUP_NAME}'' Non-Local DB ''*{#REPLICA_NAME}*{#DBNAME}'': Log queue size is growing'
                  priority: HIGH
                  description: 'The log records of the primary database are not sent to the secondary databases.'
                  tags:
                    -
                      tag: availability-group
                      value: '{#GROUP_NAME}'
                    -
                      tag: non-local-db
                      value: '{#DBNAME}'
                    -
                      tag: scope
                      value: capacity
            -
              uuid: 14a8853698bb47c9906e853f0364d952
              name: 'MSSQL AG ''{#GROUP_NAME}'' Non-Local DB ''*{#REPLICA_NAME}*{#DBNAME}'': Redo log queue size'
              type: DEPENDENT
              key: 'mssql.non-local_db.redo_queue_size["{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}"]'
              delay: '0'
              history: 7d
              units: B
              description: 'Amount of log records in the log files of the secondary replica that has not yet been redone.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.group_name==''{#GROUP_NAME}'' && @.replica_name==''{#REPLICA_NAME}'' && @.dbname==''{#DBNAME}'')].redo_queue_size.first()'
                -
                  type: MULTIPLIER
                  parameters:
                    - '1024'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'db.odbc.get["{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}_non-local_db.states","{$MSSQL.DSN}"]'
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: component
                  value: non-local-db
                -
                  tag: non-local-db
                  value: '{#DBNAME}'
              trigger_prototypes:
                -
                  uuid: abde1399b4ce42ec852b36eb4d99b1b8
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.non-local_db.redo_queue_size["{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}"],#1)>last(/Template MSSQL by ODBC Proxy/mssql.non-local_db.redo_queue_size["{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}"],#2) and last(/Template MSSQL by ODBC Proxy/mssql.non-local_db.redo_queue_size["{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}"],#2)>last(/Template MSSQL by ODBC Proxy/mssql.non-local_db.redo_queue_size["{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}"],#3)'
                  name: 'MSSQL AG ''{#GROUP_NAME}'' Non-Local DB ''*{#REPLICA_NAME}*{#DBNAME}'': Redo log queue size is growing'
                  priority: HIGH
                  description: 'The log records in the log files of the secondary replica have not yet been redone.'
                  tags:
                    -
                      tag: availability-group
                      value: '{#GROUP_NAME}'
                    -
                      tag: non-local-db
                      value: '{#DBNAME}'
                    -
                      tag: scope
                      value: capacity
          preprocessing:
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1d
        -
          uuid: 034092482b004a82abeaa100fa1e1c18
          name: 'Replication discovery'
          type: ODBC
          key: 'db.odbc.discovery[replicas,"{$MSSQL.DSN}"]'
          delay: 1h
          status: DISABLED
          params: |
            SELECT ag.name as group_name,
            arcs.replica_server_name as replica_name
            FROM sys.dm_hadr_availability_replica_cluster_states as arcs
            JOIN sys.availability_groups ag ON ag.group_id = arcs.group_id
            JOIN sys.dm_hadr_availability_replica_states ars ON ars.replica_id = arcs.replica_id
          username: '{$MSSQL.USER}'
          password: '{$MSSQL.PASSWORD}'
          description: 'Discovery of the database replicas.'
          item_prototypes:
            -
              uuid: b730cf0e055c48148e5cb3bc80e63141
              name: 'MSSQL AG ''{#GROUP_NAME}'' Replica ''{#REPLICA_NAME}'': Get the replica state'
              type: ODBC
              key: 'db.odbc.get["{#GROUP_NAME}_{#REPLICA_NAME}_replica.state","{$MSSQL.DSN}"]'
              history: 0h
              trends: '0'
              value_type: TEXT
              params: |
                SELECT ars.connected_state as connected_state,
                ars.is_local as is_local,
                arcs.join_state as join_state,
                ISNULL(ars.operational_state,6) as operational_state,
                ISNULL(ars.recovery_health,2) as recovery_health,
                ars.role as role,
                ars.synchronization_health as synchronization_health,
                ag.name as group_name, 
                arcs.replica_server_name as replica_name
                FROM sys.dm_hadr_availability_replica_cluster_states as arcs 
                JOIN sys.availability_groups ag ON ag.group_id = arcs.group_id
                JOIN sys.dm_hadr_availability_replica_states ars ON ars.replica_id = arcs.replica_id
                WHERE ag.name = '{#GROUP_NAME}' AND arcs.replica_server_name = '{#REPLICA_NAME}'
              username: '{$MSSQL.USER}'
              password: '{$MSSQL.PASSWORD}'
              description: 'Getting the database replica states.'
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: component
                  value: raw
                -
                  tag: replica
                  value: '{#REPLICA_NAME}'
            -
              uuid: 8c8d8a5bc4af44729dd817fa4d814c94
              name: 'MSSQL AG ''{#GROUP_NAME}'' Replica ''{#REPLICA_NAME}'': Connected state'
              type: DEPENDENT
              key: 'mssql.replica.connected_state["{#GROUP_NAME}_{#REPLICA_NAME}"]'
              delay: '0'
              history: 7d
              description: |
                Whether a secondary replica is currently connected to the primary replica:
                0 : Disconnected. The response of an availability replica to the DISCONNECTED state depends on its role:
                On the primary replica, if a secondary replica is disconnected, its secondary databases are marked as NOT SYNCHRONIZED on the primary replica, which waits for the secondary to reconnect;
                On a secondary replica, upon detecting that it is disconnected, the secondary replica attempts to reconnect to the primary replica.
                1 : Connected. Each primary replica tracks the connection state for every secondary replica in the same availability group. Secondary replicas track the connection state of only the primary replica.
              valuemap:
                name: 'MSSQL AG Connected state'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.group_name==''{#GROUP_NAME}'' && @.replica_name==''{#REPLICA_NAME}'')].connected_state.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'db.odbc.get["{#GROUP_NAME}_{#REPLICA_NAME}_replica.state","{$MSSQL.DSN}"]'
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: component
                  value: replica
                -
                  tag: replica
                  value: '{#REPLICA_NAME}'
            -
              uuid: bcbd62c0aed342dbb5223cbb039eacb6
              name: 'MSSQL AG ''{#GROUP_NAME}'' Replica ''{#REPLICA_NAME}'': Is local'
              type: DEPENDENT
              key: 'mssql.replica.is_local["{#GROUP_NAME}_{#REPLICA_NAME}"]'
              delay: '0'
              history: 7d
              description: |
                Whether the replica is local:
                0 = Indicates a remote secondary replica in an availability group whose primary replica is hosted by the local server instance. This value occurs only on the primary replica location.
                1 = Indicates a local replica. On secondary replicas, this is the only available value for the availability group to which the replica belongs.
              valuemap:
                name: 'MSSQL - Yes / No'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.group_name==''{#GROUP_NAME}'' && @.replica_name==''{#REPLICA_NAME}'')].is_local.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'db.odbc.get["{#GROUP_NAME}_{#REPLICA_NAME}_replica.state","{$MSSQL.DSN}"]'
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: component
                  value: replica
                -
                  tag: replica
                  value: '{#REPLICA_NAME}'
            -
              uuid: 9331665f9e894607b0211839b98ec73a
              name: 'MSSQL AG ''{#GROUP_NAME}'' Replica ''{#REPLICA_NAME}'': Join state'
              type: DEPENDENT
              key: 'mssql.replica.join_state["{#GROUP_NAME}_{#REPLICA_NAME}"]'
              delay: '0'
              history: 7d
              description: |
                0 = Not joined
                1 = Joined, standalone instance
                2 = Joined, failover cluster instance
              valuemap:
                name: 'MSSQL AG Join state'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.group_name==''{#GROUP_NAME}'' && @.replica_name==''{#REPLICA_NAME}'')].join_state.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'db.odbc.get["{#GROUP_NAME}_{#REPLICA_NAME}_replica.state","{$MSSQL.DSN}"]'
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: component
                  value: replica
                -
                  tag: replica
                  value: '{#REPLICA_NAME}'
            -
              uuid: 4a4c91f18b03490fa91a98609bbbaaec
              name: 'MSSQL AG ''{#GROUP_NAME}'' Replica ''{#REPLICA_NAME}'': Operational state'
              type: DEPENDENT
              key: 'mssql.replica.operational_state["{#GROUP_NAME}_{#REPLICA_NAME}"]'
              delay: '0'
              history: 7d
              description: |
                Current operational state of the replica:
                0 = Pending failover
                1 = Pending
                2 = Online
                3 = Offline
                4 = Failed
                5 = Failed, no quorum
                6 = Not local
              valuemap:
                name: 'MSSQL AG Operational state'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.group_name==''{#GROUP_NAME}'' && @.replica_name==''{#REPLICA_NAME}'')].operational_state.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'db.odbc.get["{#GROUP_NAME}_{#REPLICA_NAME}_replica.state","{$MSSQL.DSN}"]'
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: component
                  value: replica
                -
                  tag: replica
                  value: '{#REPLICA_NAME}'
              trigger_prototypes:
                -
                  uuid: c5dc2f29171241aaa5ce58caba02c19a
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.replica.operational_state["{#GROUP_NAME}_{#REPLICA_NAME}"])=0 or last(/Template MSSQL by ODBC Proxy/mssql.replica.operational_state["{#GROUP_NAME}_{#REPLICA_NAME}"])=1 or last(/Template MSSQL by ODBC Proxy/mssql.replica.operational_state["{#GROUP_NAME}_{#REPLICA_NAME}"])=3'
                  name: 'MSSQL AG ''{#GROUP_NAME}'' Replica ''{#REPLICA_NAME}'': {#REPLICA_NAME} is {ITEM.VALUE}'
                  priority: WARNING
                  description: 'The operational state of the replica in a given availability group is "Pending" or "Offline".'
                  tags:
                    -
                      tag: availability-group
                      value: '{#GROUP_NAME}'
                    -
                      tag: replica
                      value: '{#REPLICA_NAME}'
                    -
                      tag: scope
                      value: availability
                -
                  uuid: f4639680b19446dc85d4480941057968
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.replica.operational_state["{#GROUP_NAME}_{#REPLICA_NAME}"])=4'
                  name: 'MSSQL AG ''{#GROUP_NAME}'' Replica ''{#REPLICA_NAME}'': {#REPLICA_NAME} is {ITEM.VALUE}'
                  priority: AVERAGE
                  description: 'The operational state of the replica in a given availability group is "Failed".'
                  tags:
                    -
                      tag: availability-group
                      value: '{#GROUP_NAME}'
                    -
                      tag: replica
                      value: '{#REPLICA_NAME}'
                    -
                      tag: scope
                      value: availability
                -
                  uuid: bf22197c569d4fb0969fbedd6c9a9a2f
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.replica.operational_state["{#GROUP_NAME}_{#REPLICA_NAME}"])=5'
                  name: 'MSSQL AG ''{#GROUP_NAME}'' Replica ''{#REPLICA_NAME}'': {#REPLICA_NAME} is {ITEM.VALUE}'
                  priority: HIGH
                  description: 'The operational state of the replica in a given availability group is "Failed, no quorum".'
                  tags:
                    -
                      tag: availability-group
                      value: '{#GROUP_NAME}'
                    -
                      tag: replica
                      value: '{#REPLICA_NAME}'
                    -
                      tag: scope
                      value: availability
            -
              uuid: 1e4d9010d7b240bbb495638438e483f3
              name: 'MSSQL AG ''{#GROUP_NAME}'' Replica ''{#REPLICA_NAME}'': Recovery health'
              type: DEPENDENT
              key: 'mssql.replica.recovery_health["{#GROUP_NAME}_{#REPLICA_NAME}"]'
              delay: '0'
              history: 7d
              description: |
                Rollup of the database_state column of the sys.dm_hadr_database_replica_states dynamic management view:
                0 : In progress. At least one joined database has a database state other than ONLINE 
                (database_state is not 0).
                1 : Online. All the joined databases have a database state of ONLINE (database_state is 0).
              valuemap:
                name: 'MSSQL AG Recovery health'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.group_name==''{#GROUP_NAME}'' && @.replica_name==''{#REPLICA_NAME}'')].recovery_health.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'db.odbc.get["{#GROUP_NAME}_{#REPLICA_NAME}_replica.state","{$MSSQL.DSN}"]'
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: component
                  value: replica
                -
                  tag: replica
                  value: '{#REPLICA_NAME}'
              trigger_prototypes:
                -
                  uuid: 67b36cb559444382bf9b51daf52f412f
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.replica.recovery_health["{#GROUP_NAME}_{#REPLICA_NAME}"])=0'
                  name: 'MSSQL AG ''{#GROUP_NAME}'' Replica ''{#REPLICA_NAME}'': {#REPLICA_NAME} Recovery in progress'
                  priority: INFO
                  description: 'At least one joined database has a database state other than ONLINE.'
                  tags:
                    -
                      tag: availability-group
                      value: '{#GROUP_NAME}'
                    -
                      tag: replica
                      value: '{#REPLICA_NAME}'
                    -
                      tag: scope
                      value: notice
            -
              uuid: f0e9ab6655fd46e9ae2d31fd43372374
              name: 'MSSQL AG ''{#GROUP_NAME}'' Replica ''{#REPLICA_NAME}'': Role'
              type: DEPENDENT
              key: 'mssql.replica.role["{#GROUP_NAME}_{#REPLICA_NAME}"]'
              delay: '0'
              history: 7d
              description: |
                Current Always On availability groups role of a local replica or a connected remote replica:
                0 = Resolving
                1 = Primary
                2 = Secondary
              valuemap:
                name: 'MSSQL AG Role'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.group_name==''{#GROUP_NAME}'' && @.replica_name==''{#REPLICA_NAME}'')].role.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'db.odbc.get["{#GROUP_NAME}_{#REPLICA_NAME}_replica.state","{$MSSQL.DSN}"]'
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: component
                  value: replica
                -
                  tag: replica
                  value: '{#REPLICA_NAME}'
            -
              uuid: cc5e74d9826640bc8468f48772923c70
              name: 'MSSQL AG ''{#GROUP_NAME}'' Replica ''{#REPLICA_NAME}'': Sync health'
              type: DEPENDENT
              key: 'mssql.replica.synchronization_health["{#GROUP_NAME}_{#REPLICA_NAME}"]'
              delay: '0'
              history: 7d
              description: |
                Reflects a rollup of the database synchronization state (synchronization_state)of all joined availability databases (also known as replicas) and the availability mode of the replica (synchronous-commit or asynchronous-commit mode). The rollup will reflect the least healthy accumulated state of the databases on the replica:
                0 : Not healthy. At least one joined database is in the NOT SYNCHRONIZING state.
                1 : Partially healthy. Some replicas are not in the target synchronization state: synchronous-commit replicas should be synchronized, and asynchronous-commit replicas should be synchronizing.
                2 : Healthy. All replicas are in the target synchronization state: synchronous-commit replicas are synchronized, and asynchronous-commit replicas are synchronizing.
              valuemap:
                name: 'MSSQL AG Synchronization health'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.group_name==''{#GROUP_NAME}'' && @.replica_name==''{#REPLICA_NAME}'')].synchronization_health.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: 'db.odbc.get["{#GROUP_NAME}_{#REPLICA_NAME}_replica.state","{$MSSQL.DSN}"]'
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: component
                  value: replica
                -
                  tag: replica
                  value: '{#REPLICA_NAME}'
              trigger_prototypes:
                -
                  uuid: c5468034bdc84200b867d9655881cafa
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.replica.synchronization_health["{#GROUP_NAME}_{#REPLICA_NAME}"])=0'
                  name: 'MSSQL AG ''{#GROUP_NAME}'' Replica ''{#REPLICA_NAME}'': {#REPLICA_NAME} is Not healthy'
                  priority: AVERAGE
                  description: 'At least one joined database is in the NOT SYNCHRONIZING state.'
                  tags:
                    -
                      tag: availability-group
                      value: '{#GROUP_NAME}'
                    -
                      tag: replica
                      value: '{#REPLICA_NAME}'
                    -
                      tag: scope
                      value: availability
                -
                  uuid: a0d8f49a1c354df990713ece48447969
                  expression: 'last(/Template MSSQL by ODBC Proxy/mssql.replica.synchronization_health["{#GROUP_NAME}_{#REPLICA_NAME}"])=1'
                  name: 'MSSQL AG ''{#GROUP_NAME}'' Replica ''{#REPLICA_NAME}'': {#REPLICA_NAME} is Partially healthy'
                  priority: WARNING
                  description: 'Some replicas are not in the target synchronization state: synchronous-commit replicas should be synchronized, and asynchronous-commit replicas should be synchronizing.'
                  tags:
                    -
                      tag: availability-group
                      value: '{#GROUP_NAME}'
                    -
                      tag: replica
                      value: '{#REPLICA_NAME}'
                    -
                      tag: scope
                      value: availability
          trigger_prototypes:
            -
              uuid: edc5691ce6d44e5097ce9660ed463a31
              expression: 'last(/Template MSSQL by ODBC Proxy/mssql.replica.connected_state["{#GROUP_NAME}_{#REPLICA_NAME}"])=0 and last(/Template MSSQL by ODBC Proxy/mssql.replica.role["{#GROUP_NAME}_{#REPLICA_NAME}"])=2'
              name: 'MSSQL AG ''{#GROUP_NAME}'' Replica ''{#REPLICA_NAME}'': {#REPLICA_NAME} is disconnected'
              priority: WARNING
              description: |
                The response of an availability replica to the DISCONNECTED state depends on its role:
                On the primary replica, if a secondary replica is disconnected, its secondary databases are marked as NOT SYNCHRONIZED on the primary replica, which waits for the secondary to reconnect; On a secondary replica, upon detecting that it is disconnected, the secondary replica attempts to reconnect to the primary replica.
              tags:
                -
                  tag: availability-group
                  value: '{#GROUP_NAME}'
                -
                  tag: replica
                  value: '{#REPLICA_NAME}'
                -
                  tag: scope
                  value: availability
          preprocessing:
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1d
      tags:
        -
          tag: class
          value: database
        -
          tag: target
          value: mssql
      macros:
        -
          macro: '{$MSSQL.AVERAGE_WAIT_TIME.MAX}'
          value: '500'
          description: 'The maximum average wait time in ms - for the trigger expression.'
        -
          macro: '{$MSSQL.BACKUP_DIFF.CRIT}'
          value: 6d
          description: 'The maximum days without a differential backup - for the High trigger expression.'
        -
          macro: '{$MSSQL.BACKUP_DIFF.WARN}'
          value: 3d
          description: 'The maximum days without a differential backup - for the Warning trigger expression.'
        -
          macro: '{$MSSQL.BACKUP_DURATION.WARN}'
          value: 1h
          description: 'The maximum job duration - for the Warning trigger expression.'
        -
          macro: '{$MSSQL.BACKUP_FULL.CRIT}'
          value: 10d
          description: 'The maximum days without a full backup - for the High trigger expression.'
        -
          macro: '{$MSSQL.BACKUP_FULL.WARN}'
          value: 9d
          description: 'The maximum days without a full backup - for the Warning trigger expression.'
        -
          macro: '{$MSSQL.BACKUP_LOG.CRIT}'
          value: 8h
          description: 'The maximum days without a log backup - for the High trigger expression.'
        -
          macro: '{$MSSQL.BACKUP_LOG.WARN}'
          value: 4h
          description: 'The maximum days without a log backup - for the Warning trigger expression.'
        -
          macro: '{$MSSQL.BUFFER_CACHE_RATIO.MIN.CRIT}'
          value: '30'
          description: 'The minimum % buffer cache hit ratio - for the High trigger expression.'
        -
          macro: '{$MSSQL.BUFFER_CACHE_RATIO.MIN.WARN}'
          value: '50'
          description: 'The minimum % buffer cache hit ratio - for the Warning trigger expression.'
        -
          macro: '{$MSSQL.DBNAME.MATCHES}'
          value: '.*'
          description: 'This macro is used in database discovery. It can be overridden on a host or linked template level.'
        -
          macro: '{$MSSQL.DBNAME.NOT_MATCHES}'
          value: master|tempdb|model|msdb
          description: 'This macro is used in database discovery. It can be overridden on a host or linked template level.'
        -
          macro: '{$MSSQL.DEADLOCKS.MAX}'
          value: '1'
          description: 'The maximum deadlocks per second - for the trigger expression.'
        -
          macro: '{$MSSQL.DSN}'
          value: '<Put your DSN here>'
          description: 'System data source name.'
        -
          macro: '{$MSSQL.FREE_LIST_STALLS.MAX}'
          value: '2'
          description: 'The maximum free list stalls per second - for the trigger expression.'
        -
          macro: '{$MSSQL.INSTANCE}'
          value: SQLServer
          description: 'The instance name for the default instance is SQLServer. For named instance set the macro value as MSSQL$instance name.'
        -
          macro: '{$MSSQL.JOB.MATCHES}'
          value: '.*'
          description: 'This macro is used in job discovery. It can be overridden on a host or linked template level.'
        -
          macro: '{$MSSQL.JOB.NOT_MATCHES}'
          value: CHANGE_IF_NEEDED
          description: 'This macro is used in job discovery. It can be overridden on a host or linked template level.'
        -
          macro: '{$MSSQL.LAZY_WRITES.MAX}'
          value: '20'
          description: 'The maximum lazy writes per second - for the trigger expression.'
        -
          macro: '{$MSSQL.LOCK_REQUESTS.MAX}'
          value: '1000'
          description: 'The maximum lock requests per second - for the trigger expression.'
        -
          macro: '{$MSSQL.LOCK_TIMEOUTS.MAX}'
          value: '1'
          description: 'The maximum lock timeouts per second - for the trigger expression.'
        -
          macro: '{$MSSQL.LOG_FLUSH_WAITS.MAX}'
          value: '1'
          description: 'The maximum log flush waits per second - for the trigger expression.'
        -
          macro: '{$MSSQL.LOG_FLUSH_WAIT_TIME.MAX}'
          value: '1'
          description: 'The maximum log flush wait time in ms - for the trigger expression.'
        -
          macro: '{$MSSQL.PAGE_LIFE_EXPECTANCY.MIN}'
          value: '300'
          description: 'The minimum page life expectancy - for the trigger expression.'
        -
          macro: '{$MSSQL.PAGE_READS.MAX}'
          value: '90'
          description: 'The maximum page reads per second - for the trigger expression.'
        -
          macro: '{$MSSQL.PAGE_WRITES.MAX}'
          value: '90'
          description: 'The maximum page writes per second - for the trigger expression.'
        -
          macro: '{$MSSQL.PASSWORD}'
          value: '<Put your password here>'
          description: 'MSSQL user password.'
        -
          macro: '{$MSSQL.PERCENT_COMPILATIONS.MAX}'
          value: '10'
          description: 'The maximum percentage of Transact-SQL compilations - for the trigger expression.'
        -
          macro: '{$MSSQL.PERCENT_LOG_USED.MAX}'
          value: '80'
          description: 'The maximum percentage of log used - for the trigger expression.'
        -
          macro: '{$MSSQL.PERCENT_READAHEAD.MAX}'
          value: '20'
          description: 'The maximum percentage of pages read/sec in anticipation of use - for the trigger expression.'
        -
          macro: '{$MSSQL.PERCENT_RECOMPILATIONS.MAX}'
          value: '10'
          description: 'The maximum percentage of Transact-SQL recompilations - for the trigger expression.'
        -
          macro: '{$MSSQL.PORT}'
          value: '1433'
          description: 'MSSQL TCP port.'
        -
          macro: '{$MSSQL.USER}'
          value: '<Put your username here>'
          description: 'MSSQL username.'
        -
          macro: '{$MSSQL.WORKTABLES_FROM_CACHE_RATIO.MIN.CRIT}'
          value: '90'
          description: 'The minimum percentage of the worktables from cache ratio - for the High trigger expression.'
        -
          macro: '{$MSSQL.WORK_FILES.MAX}'
          value: '20'
          description: 'The maximum number of work files created per second - for the trigger expression.'
        -
          macro: '{$MSSQL.WORK_TABLES.MAX}'
          value: '20'
          description: 'The maximum number of work tables created per second - for the trigger expression.'
      valuemaps:
        -
          uuid: 755d617607ec4667bdc2386d27743d01
          name: 'MSSQL - Yes / No'
          mappings:
            -
              value: '0'
              newvalue: 'No'
            -
              value: '1'
              newvalue: 'Yes'
        -
          uuid: 2a7a73133a4b4b34a7df4b34b4c44201
          name: 'MSSQL AG Connected state'
          mappings:
            -
              value: '0'
              newvalue: Disconnected
            -
              value: '1'
              newvalue: Connected
        -
          uuid: 09b8cfc3a5c54de98ec2a6904933f055
          name: 'MSSQL AG Join state'
          mappings:
            -
              value: '0'
              newvalue: 'Not joined'
            -
              value: '1'
              newvalue: 'Joined, standalone instance'
            -
              value: '2'
              newvalue: 'Joined, failover cluster instance'
        -
          uuid: c4ee5eda71744cce87ea46ef62371f60
          name: 'MSSQL AG Operational state'
          mappings:
            -
              value: '0'
              newvalue: 'Pending failover'
            -
              value: '1'
              newvalue: Pending
            -
              value: '2'
              newvalue: Online
            -
              value: '3'
              newvalue: Offline
            -
              value: '4'
              newvalue: Failed
            -
              value: '5'
              newvalue: 'Failed, no quorum'
            -
              value: '6'
              newvalue: 'Replica is not local'
        -
          uuid: 914801c7afef405aa22e2fa7ff2b688d
          name: 'MSSQL AG Recovery health'
          mappings:
            -
              value: '0'
              newvalue: 'In progress'
            -
              value: '1'
              newvalue: Online
            -
              value: '2'
              newvalue: 'Replica is not local'
        -
          uuid: bd1c8357b46f409d9939a321591b6bc0
          name: 'MSSQL AG Role'
          mappings:
            -
              value: '0'
              newvalue: Resolving
            -
              value: '1'
              newvalue: Primary
            -
              value: '2'
              newvalue: Secondary
        -
          uuid: b0de520922dc430a8e4a29c0f55b8f4c
          name: 'MSSQL AG Synchronization health'
          mappings:
            -
              value: '0'
              newvalue: 'Not healthy'
            -
              value: '1'
              newvalue: 'Partially healthy'
            -
              value: '2'
              newvalue: Healthy
        -
          uuid: 3e150cc471874f67b98de2015ac3769c
          name: 'MSSQL DB state'
          mappings:
            -
              value: '0'
              newvalue: ONLINE
            -
              value: '1'
              newvalue: RESTORING
            -
              value: '2'
              newvalue: RECOVERING
            -
              value: '3'
              newvalue: RECOVERY_PENDING
            -
              value: '4'
              newvalue: SUSPECT
            -
              value: '5'
              newvalue: EMERGENCY
            -
              value: '6'
              newvalue: OFFLINE
            -
              value: '7'
              newvalue: COPYING
            -
              value: '10'
              newvalue: OFFLINE_SECONDARY
        -
          uuid: ddf5bdfe64ef4b16ae2b33e3d04e4618
          name: 'MSSQL Job Run Status'
          mappings:
            -
              value: '0'
              newvalue: Failed
            -
              value: '1'
              newvalue: Succeeded
            -
              value: '2'
              newvalue: Retry
            -
              value: '3'
              newvalue: Canceled
            -
              value: '4'
              newvalue: Running
            -
              value: '5'
              newvalue: Unknown
        -
          uuid: 01ecc08108cd4396bfe69c28d8cb4b13
          name: 'MSSQL Mirroring Role'
          mappings:
            -
              value: '0'
              newvalue: 'Database is inaccessible or is not mirrored'
            -
              value: '1'
              newvalue: Principal
            -
              value: '2'
              newvalue: Mirror
        -
          uuid: 3d01c986bfc24d068d80a52e28379068
          name: 'MSSQL Mirroring State'
          mappings:
            -
              value: '0'
              newvalue: Suspended
            -
              value: '1'
              newvalue: 'Disconnected from the other partner'
            -
              value: '2'
              newvalue: Synchronizing
            -
              value: '3'
              newvalue: 'Pending Failover'
            -
              value: '4'
              newvalue: Synchronized
            -
              value: '5'
              newvalue: 'The partners are not synchronized. Failover is not possible now.'
            -
              value: '6'
              newvalue: 'The partners are synchronized. Failover is potentially possible.'
            -
              value: '7'
              newvalue: 'Database is inaccessible or is not mirrored'
        -
          uuid: 5a7357bfd6a54d6192e1836c32775d31
          name: 'MSSQL Safety level'
          mappings:
            -
              value: '0'
              newvalue: 'Unknown state'
            -
              value: '1'
              newvalue: 'Off [asynchronous]'
            -
              value: '2'
              newvalue: 'Full [synchronous]'
            -
              value: '3'
              newvalue: 'Database is inaccessible or is not mirrored'
        -
          uuid: c35bd592f5c8486d9261932f763e3da7
          name: 'MSSQL Witness state'
          mappings:
            -
              value: '0'
              newvalue: Unknown
            -
              value: '1'
              newvalue: Connected
            -
              value: '2'
              newvalue: Disconnected
            -
              value: '3'
              newvalue: 'No witness exists'
        -
          uuid: c51d95c4c201440ab642723285283883
          name: 'Service state'
          mappings:
            -
              value: '0'
              newvalue: Down
            -
              value: '1'
              newvalue: Up
  triggers:
    -
      uuid: e2266bd5d17745dd8bac84f8ce8df89c
      expression: 'last(/Template MSSQL by ODBC Proxy/mssql.forwarded_records_sec.rate) * 100 > 10 * last(/Template MSSQL by ODBC Proxy/mssql.batch_requests_sec.rate)'
      name: 'MSSQL: Too frequently using pointers'
      status: DISABLED
      priority: WARNING
      description: 'Rows with varchar columns can experience expansion when varchar values are updated with a longer string.  In the case where the row cannot fit in the existing page, the row migrates and access to the row will traverse a pointer.  This only happens on heaps (tables without clustered indexes). Evaluate clustered index for heap tables.  In cases where clustered indexes cannot be used, drop non-clustered indexes, build a clustered index to reorg pages and rows, drop the clustered index, then recreate non-clustered indexes.'
      tags:
        -
          tag: scope
          value: performance
    -
      uuid: 86711821241a4694840e35d64f4d9e84
      expression: 'last(/Template MSSQL by ODBC Proxy/mssql.readahead_pages_sec.rate) > {$MSSQL.PERCENT_READAHEAD.MAX} / 100 * last(/Template MSSQL by ODBC Proxy/mssql.page_reads_sec.rate)'
      name: 'MSSQL: Too many physical reads occurring'
      status: DISABLED
      priority: WARNING
      description: 'If this value makes up even a sizeable minority of the total Page Reads/sec (say, greater than 20% of the total page reads), you may have too many physical reads occurring.'
      tags:
        -
          tag: scope
          value: performance
  graphs:
    -
      uuid: d2e10a50ce264271b14e0ff6fa8a7a8e
      name: 'MSSQL: Access methods'
      graph_items:
        -
          color: 1A7C11
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.forwarded_records_sec.rate
        -
          sortorder: '1'
          color: 2774A4
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.full_scans_sec.rate
        -
          sortorder: '2'
          color: F63100
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.index_searches_sec.rate
        -
          sortorder: '3'
          color: A54F10
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.page_splits_sec.rate
        -
          sortorder: '4'
          color: FC6EA3
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.workfiles_created_sec.rate
        -
          sortorder: '5'
          color: 6C59DC
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.worktables_created_sec.rate
    -
      uuid: e7d7a9e3f3b9417683f636a25d663434
      name: 'MSSQL: Auto-params'
      graph_items:
        -
          color: 1A7C11
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.autoparam_attempts_sec.rate
        -
          sortorder: '1'
          color: 2774A4
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.failed_autoparams_sec.rate
        -
          sortorder: '2'
          color: F63100
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.safe_autoparams_sec.rate
        -
          sortorder: '3'
          color: A54F10
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.unsafe_autoparams_sec.rate
    -
      uuid: f7ffa60914314f8888c65e0880fd9766
      name: 'MSSQL: Cache objects'
      graph_items:
        -
          color: 1A7C11
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.cache_object_counts
        -
          sortorder: '1'
          color: 2774A4
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.cache_objects_in_use
    -
      uuid: 29acb4bf0baf4bda845df0c1a992e55c
      name: 'MSSQL: Compilations'
      graph_items:
        -
          color: 1A7C11
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.sql_compilations_sec.rate
        -
          sortorder: '1'
          color: 2774A4
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.sql_compilations_sec.rate
    -
      uuid: fee2ab9bd17c4344a162cc5c54227e33
      name: 'MSSQL: Database pages'
      graph_items:
        -
          color: 1A7C11
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.database_pages
        -
          sortorder: '1'
          color: 2774A4
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.target_pages
    -
      uuid: ec5d22007a344d56bb6f4fcba1f2a38c
      name: 'MSSQL: Errors'
      graph_items:
        -
          color: 1A7C11
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.errors_sec.rate
        -
          sortorder: '1'
          color: 2774A4
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.offline_errors_sec.rate
        -
          sortorder: '2'
          color: F63100
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.info_errors_sec.rate
        -
          sortorder: '3'
          color: A54F10
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.kill_connection_errors_sec.rate
        -
          sortorder: '4'
          color: FC6EA3
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.user_errors_sec.rate
    -
      uuid: 3fc6a7c4d6f547e7a97d288f8f248f91
      name: 'MSSQL: Locks'
      graph_items:
        -
          color: 1A7C11
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.lock_requests_sec.rate
        -
          sortorder: '1'
          color: 2774A4
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.lock_timeouts_sec.rate
        -
          sortorder: '2'
          color: F63100
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.number_deadlocks_sec.rate
        -
          sortorder: '3'
          color: A54F10
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.lock_waits_sec.rate
        -
          sortorder: '4'
          color: FC6EA3
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.average_wait_time
    -
      uuid: 51922dd64c064af484b9cf6d68f9ace3
      name: 'MSSQL: Logins per second and Logouts per second'
      graph_items:
        -
          color: 1A7C11
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.logins_sec.rate
        -
          sortorder: '1'
          color: 2774A4
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.logouts_sec.rate
    -
      uuid: 718762bb74ae4711b0923ad337ce891d
      name: 'MSSQL: Memory/cache load'
      graph_items:
        -
          color: 1A7C11
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.cache_hit_ratio
        -
          sortorder: '1'
          color: 2774A4
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.buffer_cache_hit_ratio
    -
      uuid: d5b31f0805ed447c8ed6cddd5459b5bf
      name: 'MSSQL: Memory grants outstanding and pending'
      graph_items:
        -
          color: 1A7C11
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.memory_grants_outstanding
        -
          sortorder: '1'
          color: 2774A4
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.memory_grants_pending
    -
      uuid: 3970da0e423f46d09a1f4209a3014494
      name: 'MSSQL: Page life expectancy'
      graph_items:
        -
          color: 1A7C11
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.page_life_expectancy
    -
      uuid: 447d34445c3c49b3a006b729b676018e
      name: 'MSSQL: Pages'
      graph_items:
        -
          color: 1A7C11
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.page_lookups_sec.rate
        -
          sortorder: '1'
          color: 2774A4
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.page_reads_sec.rate
        -
          sortorder: '2'
          color: F63100
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.page_writes_sec.rate
        -
          sortorder: '3'
          color: A54F10
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.readahead_pages_sec.rate
        -
          sortorder: '4'
          color: FC6EA3
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.checkpoint_pages_sec.rate
        -
          sortorder: '5'
          color: 6C59DC
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.free_list_stalls_sec.rate
        -
          sortorder: '6'
          color: AC8C14
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.lazy_writes_sec.rate
    -
      uuid: bcd6164e1e474b8c84580edde994d549
      name: 'MSSQL: Processes blocked'
      graph_items:
        -
          color: 1A7C11
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.processes_blocked
    -
      uuid: 68674a10c7ec4c21b7f81e2d9c57fa84
      name: 'MSSQL: Server memory'
      graph_items:
        -
          color: 1A7C11
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.target_server_memory
        -
          sortorder: '1'
          color: 2774A4
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.total_server_memory
        -
          sortorder: '2'
          color: F63100
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.granted_workspace_memory
        -
          sortorder: '3'
          color: A54F10
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.maximum_workspace_memory
    -
      uuid: b05fd18f72a14782ad0ccf934d2bda22
      name: 'MSSQL: Transactions'
      graph_items:
        -
          color: 1A7C11
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.transactions_sec.rate
        -
          sortorder: '1'
          color: 2774A4
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.batch_requests_sec.rate
    -
      uuid: 1994b6d954bf47b1ba46124983bac029
      name: 'MSSQL: Waits per second'
      graph_items:
        -
          color: 1A7C11
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.latch_waits_sec.rate
        -
          sortorder: '1'
          color: 2774A4
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.lock_waits_sec.rate
    -
      uuid: 04a5bf021d1e492283da51d232445f03
      name: 'MSSQL: Wait times'
      graph_items:
        -
          color: 1A7C11
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.average_latch_wait_time
        -
          sortorder: '1'
          color: 2774A4
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.total_latch_wait_time
        -
          sortorder: '2'
          color: F63100
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.average_wait_time
        -
          sortorder: '3'
          color: A54F10
          item:
            host: 'Template MSSQL by ODBC Proxy'
            key: mssql.lock_wait_time
